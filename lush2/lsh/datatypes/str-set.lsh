;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; PSU Lush
;;;   Copyright (C) 2005 Ralf Juengling
;;; Derived from LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "datatypes/str-tree-node")
(libload "datatypes/ordered-set")

#? (new StrSet)
;; Make a new empty set of string items.

(def-set Str (mlambda (_) `(printf "\t%s\n" item)))

;; redefine insert
(let ((oldinsert (getmethod StrSet 'insert)))

  (putmethod StrSet 'insert ())
  (putmethod StrSet '-insert oldinsert) )
(defmethod StrSet insert (s)
  (declare (-str-) s)
  (if (not (==> this -insert s))
      ()
    ;; save a copy of s instead of s
    ;; this copy is freed by the treenode pool
    #{
    char *sc = strdup($s);
    ifn (sc) run_time_error(rterr_out_of_memory);
    cside_create_str(sc);
    $this->root->item = sc;
    #}
    t))

;; redefine pretty
(defmethod StrSet pretty ()
  (do ((item this))
    (declare (-str-) item)
    (print-item)
    t))

;; remove insert-all and remove-range
(putmethod StrSet 'insert-all ())

(dhc-make-class () StrSet)

