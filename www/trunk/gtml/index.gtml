
#define thebanner <img src="[[IMAGES]]/front-banner.png" height=78 width=500 border=2>

#include "[[HEADER_INC]]"

<div align=justify>
<img src="[[IMAGES]]/grenouille-400.jpg" align=right width=200 height=132 border=2>
Lush is an <b>object-oriented programming language</b> designed
for researchers, experimenters, and engineers interested in
<b>large-scale numerical and graphic applications</b>.  Lush is designed to
be used in situations where one would want to combine the flexibility
of a high-level, weakly-typed interpreted language, with the
efficiency of a strongly-typed, natively-compiled language, and with
the easy integration of code written in C, C++, or other languages.
<p>
Lush is Free Software (under the GPL license) and runs on GNU/Linux,
Solaris, Irix, and Windows under Cygwin.
<p>
Lush can be used advantageously for projects where one would otherwise
use a combination of an interpreted language like Matlab, Python, Perl, 
S+, or even (gasp!) BASIC, and a compiled language like C.  Lush
brings the best of both worlds by wrapping three languages into one:
(1) a weakly-typed, garbage-collected, dynamically scoped,
interpreted language with a simple Lisp-like syntax, (2) a
strongly-typed, lexically-scoped compiled language that uses the same
Lisp-like syntax, and (3) the C language, which can be freely mixed
with Lush code within a single program, even within a single function.
It sounds complicated, but it is not. In fact, Lush is designed to
be very simple to learn and easy to use.
<p>
If you do research and development in <b>signal processing, image
processing, machine learning, computer vision, bio-informatics, data
mining, statistics, simulation, optimization, or artificial 
intelligence</b>, and feel limited by Matlab and other existing 
tools, Lush is for you. If you want a simple environment to experiment 
with <b>graphics, video, and sounds,</b> 
Lush is for you.
<p>
Lush's main features includes:
<ul>
 <li> A very clean, simple, and easy to learn Lisp-like syntax.
 <li> A compiler that produces very efficient C code and relies
      on the C compiler to produce efficient native code  
      (no inefficient bytecode or virtual machine).
 <li> An <b>easy way to interface C functions and libraries</b>,
       and a powerful dynamic linker/loader for object files or libraries
       (.o, .a and .so files) written in other compiled languages.
 <li> The ability to <b>freely mix Lisp and C in a single function</b>.
 <li> A powerful set of vector/matrix/tensor operations.
 <li> A <b>huge library of over 10,000 numerical routines</b>, 
       including full interfaces to GSL, LAPACK, and BLAS.
 <li> A library of <b>image and signal processing</b> routines.
 <li> An extensive set of <b>graphic routines</b>, including
       an object-oriented GUI toolkit, an interface to 
       OpenGL/GLU/GLUT, and the OpenInventor scene rendering engine.
 <li> An interface to the Simple Directmedia Layer <b>(SDL)</b>
      multimedia library, including a sprite class with
      pixel-accurate collision detection (perfect for 2D games).
 <li> Sound and video grabbing (using <b>ALSA</b> and <b>Video4Linux</b>).
 <li> Several libraries for <b>machine learning</b>, neural net,
      statistical estimation, Hidden Markov Models
      (gblearn2, Torch, HTK, SVM).
 <li> libraries for <b>computer vision</b> (OpenCV, Intel's open source 
      Vision Library), and 3D scene rendering (OpenInventor).
 <li> bindings to the JavaVM API and to the Python C API.
 <li> Lush is Free Software.
</ul>
This combination of flexibility, efficiency, and extensive libraries
with over 14,000 functions and classes makes Lush an ideal platform for 
research and development in signal processing, image processing, machine 
learning, computer vision, bio-informatics, data mining, statistics, 
and artificial intelligence. Its speed and extensive libraries allow such 
things as real-time sound, image, and video processing.  Most users use 
Lush as a research tool, but many use it as a general purpose script
language, or as a general language for application development. Some
have been known to use Lush to develop 2D and 3D games. A few have
even used Lush to develop commercial software for embedded processors.
<p>
For more specific information, <a href="lush-manual/30381be4.html">have a 
look at this tutorial</a>.
</div>
<p>

[[sectionbanner(news,Latest News)]]

#include "latest-news"
<p>
<a href="news.html"><b>More news.....</b></a>

[[sectionbanner(dwnld,Installing Lush)]]

IMPORTANT NOTE: New features and fixes are being added to the CVS
version of Lush on a daily basis. Before reporting a problem, please
install the CVS version.

<ul>
<li><b>Installation of the Debian/Ubuntu Package</b>: As of December
 2006, the maintainer of the Debian package for Lush is <a
 href="http://www.onerussian.com/">Yaroslav Halchenko</a> (many thanks
 to Yaroslav for volunteering).  Until Yaroslav's recent involvement,
 the Debian package was missing a few important dependencies. Yaroslav
 has fixed them, so it should become considerably easier to install
 Lush on Debian/Ubuntu and their many variations. Unfortunately, the
 Lush version on Ubuntu 6.10 "Edgy" is still 1.1, and has many package
 dependencies missing. So, until the next version, get the CVS version
 (see below) or <a href="[[SHOWFILES]]">download and build the latest
 released version</a>.
<li><b>Other Linux Distros</b>: many commercial Linux distros
 (Mandriva, Red Hat, Fedore Core, SuSE) have pre-packaged versions of
 Lush. However, we strongly recommend that you install and compile the
 CVS version if you are a serious user.
</ul>

<p>
<font size=+1 color="[[blue]]"><b>Downloading</b></font><br>
<ul>
<li><b>CVS snapshot</b>: if you want the bleeding edge version, 
 you can get a CVS snapshot as follows:
<pre>
cvs -d:pserver:anonymous@lush.cvs.sourceforge.net:/cvsroot/lush login 
[type enter when prompted for a password]
cvs -z3 -d:pserver:anonymous@lush.cvs.sourceforge.net:/cvsroot/lush co lush
</pre>
You can subsequently synchronize to the latest CVS version with
<pre>
cd lush; cvs update -d
</pre>
<li><b>Released version</b>: go to the <a href="[[SHOWFILES]]">download page</a>, 
 download the latest version, and unpack the tar.gz
</ul>
<p>

<font size=+1 color="[[blue]]"><b>Installing</b></font><br>

<b>Pre-requisites</b>: On Debian/Ubuntu, you must install the
following packages: gcc, g++, libx11-dev, libinutils-dev, indent,
libreadline5, libreadline5-dev libgsl0, libgsl0-dev. On other
distros (Mandriva, SuSE, Fedora Core, etc), there are corresponding
packages with slightly different names.
<p>
<b>Optional pre-requisites</b>: Optionally, you can also install the
OpenGL development packages (freeglut3, freeglut3-dev,
libgl1-mesa-dev), SDL development packages (libsdl1.2debian,
libsdl1.2-dev), and BLAS/LAPACK (lapack3, lapack3-dev).
<p>
<b>Compilation</b>:
<p>
Then, compile Lush with:
<pre>
cd lush
./configure
make
</pre>
You can run Lush directly by typing wherever-you-installed-lush/bin/lush, or
by adding wherever-you-installed-lush/bin to your shell path.
<p>
However, you can also perform a system-wide install as follows:
<pre>
su root
[type your root password]
make install
</pre>
or (on Ubuntu):
<pre>
sudo make install
[type your password]
</pre>
This will install Lush and its libraries in /usr/local/share/lush
and the executable in /usr/local/bin/lush with a link from /usr/bin/lush.
<p>
<font size=+1 color="[[blue]]"><b>Running</b></font><br>

To start Lush, type "lush" at the prompt (and CTRL-D to exit).
<p>
Emacs users will prefer to run Lush within Emacs. To do so, add the 
following line to your .emacs file:
<pre> (load "/usr/local/share/lush/etc/lush.el")</pre>
Then type "ALT-X lush" in Emacs to start Lush.
<p>
At the Lush prompt, type (helptool) to fire up the documentation browser.
<p>
<b>NOTE:</b>: on the old Mandrake 9.2, change the "-O3" to "-O2" in 
the lush/src/Makefile or Lush may crash (due to some bug in gcc).
<p>

[[sectionbanner(wid,What is Lush?)]]

<table border=0 cellpadding=4>
<tr><td>
<div align=justify>
Many software projects, particularly research projects, 
require <b>two languages</b>:
an efficient compiled language such as C or C++ for implementing the low-level
or computationally expensive function, and a flexible, possibly interpreted
language for high-level control, scripting, experimentation, and tinkering.  
Popular research-oriented interpreters such as Matlab are somewhat 
inefficient, lack support for complex data structures, lack the 
power of a full-fledged object-oriented programming language, and lack
simple interfacing to C and other compiled languages.
<p>
Lush uses a <b>very simple Lisp syntax</b>. If the word "Lisp" sends shivers
down your spine, be advised that the dialect of Lisp that Lush
implements is extremely simple to learn, with possibly one the
simplest syntaxes around.  Most scientists, engineers, and
software developers who have learned Lush have become proficient at it
in a few days, even if they had no prior exposure to Lisp. It's very
simple. Really. In fact, Lush has been used to teach programming to kids.
<p>
The Lush compiler has several interesting properties, and a few limitations.  
Its main advantage is that it <b>generates very efficient C</b> code which 
is then compiled with the best available C compiler for the machine 
considered and loaded dynamically. The C code produced does not simulate a 
virtual machine, it is real, low-level, bang-the-metal, no-runtime-check,
don't-break-for-animals, C code, just like what you would write by hand.
Its main disadvantage is that, although it compiles a Lisp-like language,
it does no more for you than what a C compiler would (no automagic
memory management, no garbage collection, no functional programming).
</div>
</td>

<td>

<table width=248>
<tr><td>
<a href="screenshots.html#edges">
<img src="[[IMAGES]]/screendumps/edges.jpg" width=240 height=180 border=1>
</a>
</td></tr>
<tr><td><i>real-time video edge detection using Video4Linux and SDL.</i></td></tr>
<tr><td align=left>
<a href="screenshots.html#teapot">
<img src="[[IMAGES]]/screendumps/teapot.png" width=204 height=214 border=1></a>
</td></tr>
<tr><td><i>OpenGL animation.</i></td></tr>
</table>

</td></tr></table>

<p>

[[sectionbanner(features,A tour of the features)]]

<div align=justify>
The Lush interpreter is written in C and features all the usual
functionalities and constructs found in every decent object-oriented
programming language such as conditional statements, loops, local
variables, functions, macros, objects, classes, methods, and
inheritance, but it also provides a large number of functions for
manipulating lists, strings, vectors, matrices, and tensors. String
functions include such things as regular expression matching and
substitutions.
<p>
<table width=248 align=right>
<tr><td><a href="screenshots.html#lander04">
<img src="[[IMAGES]]/screendumps/lander04.jpg" align=right width=240 height=180 border=1></a></td></tr>
<tr><td><i>
This shows a simple lunar lander game that uses the SDL 
library and the sprite class. The whole game fits in 
<a href="lander04.html">60 lines of Lush</a>.
</i></td></tr>
</table>
The Lush interpreter is quite similar to some lisps of the mid 80's
like "Le_Lisp" and "UCI-Lisp". It is significantly simpler than
"Common Lisp" and quite different from Scheme.
<p>
An unusual feature of Lush is its compiler to C, its dynamic linker/loader,
and the ease with which one can interface existing C functions and
libraries. En even more unusual feature is the ability to intermix
Lisp and C source code within a single function. 
<p>
The <b>vector and matrix manipulation engine</b> is quite powerful and
efficient, making Lush ideal for <b>heavy numerical applications</b>
and applications such as <b>signal and image processing</b>. It
includes functions to create, resize, and convert vectors, matrices,
and tensors with up to eight dimensions.  It also includes basic
matrix operations such as scalar operations on all elements of a
matrix, dot products, outer products, transposition, highly optimized
1D and 2D convolutions. A set of vector/matrix iterators is also
provided.
<p>
Lush is an <b>object-oriented language</b>. Classes with slots and methods 
can be defined and compiled. Derived classes inherit the slots and 
methods of their parent class (similar to the C++ semantics).
<p>
Lush includes all the <b>functions familiar to Lisp aficionados</b>,
such as list functions, list iterators, physical list manipulation,
macros, splicing macros, symbol manipulation, etc, but most casual
users will probably prefer to stay away from those.
<p>
Lush provides a set of simple-to-use low-level <b>graphic
functions</b> to draw lines, polygons, rectangles, pictures, and text
in color, with automatic refresh and double-buffering capability (for
simple animations). Graphics can be drawn in an X-windows window (on
Unix), or sent to a PostScript file.
<p>
Lush also contains a very compact and easy-to-use <b>object-oriented 
graphical user interface generator called ``Ogre''</b>. Ogre is entirely 
written in Lisp on top of the low-level graphic functions mentioned
above. It contains predefined classes for buttons, sliders, radio buttons,
menus, string editors, etc... Ogre includes an automatic mechanism for placing
objects in the window, thereby greatly simplifying the design and
implementation of GUIs. Simple GUIs can be written in extremely short 
times and are very compact. A very unique feature is that there is no
need to call an "event main loop": you can keep typing at the Lush 
prompt while your GUI app is running!
<p>
Lush provides <b>two models for Input/Output</b>. One is a set of ``Lispy'' I/O
functions that allow easy input and output of ASCII data, lisp expressions,
lisp objects, and matrices. It includes such goodies as pipes and
sockets. The other model essentially provides access to the standard C I/O
library, including fopen, popen, fprintf, fscanf, fgetc, fputc fgets, and
various functions for reading and writing matrices.
Large matrices can be mapped in the virtual addressing space, instead of
explicitely loaded in memory. This allows to access very large datasets
efficiently. 
<p>
<table width=610 align-center>
<tr><td><a href="[[IMAGES]]/screendumps/helptool01.png">
<img src="[[IMAGES]]/screendumps/helptool02.png"  border=1>
</a></td></tr>
<tr><td><i>
This picture shows Lush's on-line documentation GUI. The right
pane shows an example of function that integrates Lush and C in the
same source. The C segment (shown in green) is delimited by the hash-brace
characters. Lisp variables can be refered to from the C by prepending
a dollar sign. Click on the picture for a full page screenshot.
</i></td></tr>
</table><br>
</div>

[[sectionbanner(inside,A tour of the Lush Libraries)]]

<div align=justify>
Lush has a huge collection of libraries and utilities available to the
user.  Some are written in Lisp, some are written in C and interfaced
to Lush, others are pre-existing libraries that have been interfaced to
Lush.
<p>
For our numerically enclined friends, Lush has a full interface to the
<a href="http://sources.redhat.com/gsl"><b>GNU Scientific Library</b></a> 
(GSL, 3500 function), and to the
<a href="http://www.netlib.org/lapack"><b>LAPACK</b></a> and 
<a href="http://www.netlib.org/blas"><b>BLAS</b></a> Linear Algebra 
libraries. This gives access to an extensive set of numerical and 
statistical functions (several thousand in fact).
<p>
Lush includes a full interface to the industry-standard 
<a href="http://www.opengl.org"><b>OpenGL</b></a>
library that allows the creation of 3D graphics and animations. This
interface include an interface to <b>GLUT, OpenGLU</b>, and 
(coming soon) <a href="http://openrm.sourceforge.net"><b>OpenRM</b></a> 
(scene graph rendering engine). 
This makes Lush an excellent platform to write interactive 
virtual reality applications, simulation software, and computer games.
<p>
Another popular library interfaced to Lush is the <b>multimedia
and game API</b>
<a href="http://www.libsdl.org"><b>Simple Directmedia Layer (SDL)</b></a>. 
It is enhanced by a high-level
library that allows the easy manipulation of sprites and animated,
movable screen objects with pixel-accurate collision detection. 
This library, combined with Lush's simple syntax, makes it ideal 
for developing simple video games and for teaching programming to children.
<p>
Lush contains a library of <b>image processing functions</b> to load, save,
resize and resample, warp, filter, and analyze images. Mathematical 
morphology operations such as connected component analysis, distance 
transform, erosion, and dilation, are also available for bitonal images.
It also includes classes and functions for easily <b>grabbing video</b> 
using the <b>Video4Linux API</b>. It also includes an interface to the 
<a href="http://sourceforge.net/projects/opencvlibrary"><b>Intel's
Open Computer Vision library (OpenCV)</b></a>.
<p>
Lush includes a library to manipulate <b>probabilistic finite state 
machines and transducers</b>. It allows the construction of grammars 
and finite state machine, and well as more advanced FSM algebra 
operations such as graph transduction, composition, and viterbi 
search algorithm. It also allows gradient-based training of 
systems that integrate such objects, as described in
<a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun, 
Bottou, Bengio, Haffner: <i>gradient-based learning applied to 
document recognition</i>, Proc. IEEE, 86-11, 1998</a>.
<p>
Lush offers an extensive library for <b>gradient-based machine
learning</b> (which is the main research interest of the authors
of Lush). The list includes: neural networks (including 
<a href="http://yann.lecun.com/exdb/lenet/index.html">convolutional 
neural networks</a>), radial basis functions, 
support vector machines, and many others. This library is based on an 
innovative object-oriented design
that allows to build large learning machines out of multiple learning
modules and to train them cooperatively. Commercially used optical
recognition systems have been built with this library. Lush also 
provides an interface to the popular 
<a href="http://www.torch.ch"><b>Torch</b></a> package which includes 
even more machine learning paradigms.
<p>
In addition, Lush provides various interfaces to multimedia libraries,
including <b>Video4Linux</b> (video grabbing) and <b>ALSA</b> 
(audio recording/playing/processing).
</div>

[[sectionbanner(inside,Frequently Asked Questions)]]

#include "frontpage-faq"
<p>

<a href="faq.html"><b>More F.A.Q.s......</b></a>

#include "[[FOOTER_INC]]"
