(de test-pat-c (pattern betas single-double split-var split-val split-way iterations)
    (-idx1- pattern betas single-double)
    (-idx2- split-var split-val split-way)
    (-int- iterations)
    (let*((hypl 0)
	  (hyp 0)
	  (double 0)
	  (lo-beta 0)
	  (hypr 0))
      
      (for (i 0 (1- iterations))
	   (setq double (single-double i))
	   ;; find the hypothesis
	   (if (= double 1) ;; single
	       (progn
		 (if (> (pattern (split-var i 0)) (split-val i 0))
		     (setq hyp (split-way i 1))
		   (setq hyp (split-way i 0)))
		 )
	     (if (> (pattern (split-var i 0)) (split-val i 0))
		 (if (> (pattern (split-var i 1)) (split-val i 1))
		     (setq hyp (split-way i 3))
		   (setq hyp (split-way i 2)))
	       (if (> (pattern (split-var i 1)) (split-val i 1))
		   (setq hyp (split-way i 0))
		 (setq hyp (split-way i 1)))
	       )
	     )
	   (setq lo-beta (log (/ 1 (betas i))))
	   (if (= 1 hyp)(setq hypl (+ hypl lo-beta)))
	   (setq hypr (+ hypr lo-beta))
	   )
      (setq hyp (/ hypl hypr))
      hyp)
    )

(de test-pat-c2 (pattern log-betas single-double split-var split-val split-way iterations)
    (-idx1- pattern log-betas single-double)
    (-idx2- split-var split-val split-way)
    (-int- iterations)
    (let*((hypl 0)
	  (hyp 0)
	  (double 0)
	  (lo-beta 0)
	  (hypr 0))
      
      (for (i 0 (1- iterations))
	   (setq double (single-double i))
	   ;; find the hypothesis
	   (if (= double 1) ;; single
	       (progn
		 (if (> (pattern (split-var i 0)) (split-val i 0))
		     (setq hyp (split-way i 1))
		   (setq hyp (split-way i 0)))
		 )
	     (if (> (pattern (split-var i 0)) (split-val i 0))
		 (if (> (pattern (split-var i 1)) (split-val i 1))
		     (setq hyp (split-way i 3))
		   (setq hyp (split-way i 2)))
	       (if (> (pattern (split-var i 1)) (split-val i 1))
		   (setq hyp (split-way i 0))
		 (setq hyp (split-way i 1)))
	       )
	     )
	   (if (= 1 hyp)(setq hypl (+ hypl (log-betas i))))
	   (setq hypr (+ hypr (log-betas i)))
	   )
      (setq hyp (/ hypl hypr))
      hyp)
    )

(if (= version "sn3.1") (dhc-make () test-pat-c2 test-pat-c))


