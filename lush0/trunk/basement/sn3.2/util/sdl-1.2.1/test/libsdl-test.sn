
(mload "sdl/libsdl")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(de rlemask-to-idx (p)
    ((-gptr- "int *") p)
    (let* ((nruns (int #{ *$p #}))
           (res (int-matrix nruns 3)))
      ((-int-) nruns)
      (for (i 0 (1- nruns))
        (let ((y 0) (x1 0) (x2 0))
          ((-int-) i y x1 x2)
          #{ $y = $p[3*$i + 1];
             $x1 = $p[3*$i + 2];
             $x2 = $p[3*$i + 3]; #} 
          (res i 0 y) (res i 1 x1) (res i 2 x2)))
      res))

(de display-rlemask (x y p)
    (let ((m (rlemask-to-idx p)))
      (idx-bloop ((z m))
        (fill-rect (+ x (z 1)) (+ y (z 0)) (- (z 2) (z 1)) 1))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(dhc-make () rlemask-to-idx)

