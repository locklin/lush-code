
;; a demo of a flying teapot that uses the OpenGL interface.

(mload "gl/openglu")

(when (not const) (dm const (m v) (eval v)))

(de auxSolidTeapot(v)
    ((-double-) v)
    #{ auxSolidTeapot($v); #} ())

(de myteapot (x y z theta phi rho)
    ((-float-) x y z  theta phi rho)
    (let ((mat (matrix 4)))
      (glPushMatrix)
      (glTranslatef x y z)
      (glrotatef theta phi rho 1)
      (mat 0 0.1745) (mat 1 0.01175) (mat 2 0.01175) (mat 3 1.0)
      (glMaterialfv (const GL_FRONT) (const GL_AMBIENT) mat)
      (mat 0 0.61424) (mat 1 0.04136) (mat 2 0.04136)       
      (glMaterialfv (const GL_FRONT) (const GL_DIFFUSE) mat)
      (mat 0 0.727811) (mat 1 0.626959) (mat 2 0.626959)
      (glMaterialfv (const GL_FRONT) (const GL_SPECULAR) mat)
      (glMaterialf (const GL_FRONT) (const GL_SHININESS) (* 0.6 128.0))
      (glColor3f 1 1 1)
      (auxSolidTeapot 1.0)
      (glPopMatrix)))

#? (opengldemo)
;; a demo of a flying teapot with a moving light that uses
;; the OpenGL interface.
(de opengldemo ()
    (new-window)
    (glsn-setup-window 0 0 (xsize) (ysize) t)
    (let ((position [ 0.0 3.0 3.0 0.0 ])
          (localview [ 0.0 ]))
      (graphics-batch
       (glEnable GL_DEPTH_TEST)
       (glDepthFunc GL_LESS)
       (glLightfv GL_LIGHT0  GL_POSITION position)
       (glLightModelfv GL_LIGHT_MODEL_LOCAL_VIEWER localview)
       (glFrontFace GL_CW)
       (glEnable GL_LIGHTING)
       (glEnable GL_LIGHT0)
       (glEnable GL_AUTO_NORMAL)
       (glEnable GL_NORMALIZE)
       (glClearColor 0.5 0.5 0.5 1.0)))

    (let ((w (xsize)) (h (ysize)))
      (graphics-batch
       (glViewport 0 0 w h)
       (glMatrixMode GL_PROJECTION)
       (glLoadIdentity)
       (gluPerspective 60 (/ w h) 0.5 20)
       (glMatrixMode GL_MODELVIEW)
       (glLoadIdentity)))

    (let ((pos (matrix 4)) (d 0) (ax 0) (ay 0) (az 0) (theta 0) (tim 0))
      (pos 2 3) (pos 3 0)
      (setq tim 
            (time
             (repeat 200
               (graphics-batch
                (pos 0 (* 3 (sin (* theta 0.0174533))))
                (pos 1 (* 3 (cos (* theta 0.0174533))))
                (glClear  0x00004100);; GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT
                (glLightfv GL_LIGHT0  GL_POSITION pos)
                (myteapot 0.0 -0.5 (+ (* 1 (sin (* 0.0174533 d))) -5) ax ay az)
                (incr theta 10)
                (incr d 10)
                (incr ax 4)
                (incr ay 7)
                (incr az 11)
                (glFlush)))))
      ;; (printf "%g frames/sec\n" (/ 200 tim))
      ))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(dhc-make-with-libs
 "opengl_demo" '("/home/snwiz/M-SGI/lib/libaux.a")  auxSolidTeapot  myteapot)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(printf "*** type (opengldemo) for a demo ***\n")