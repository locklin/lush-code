;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; replicable, two hidden layer, fully connected net
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(mload "libnets")

(printf "[%s]\n" file-being-loaded)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defclass net-fff sn-module
  ((-obj- (f-layer)) f0-module)
  ((-obj- (idx3-ddstate)) f0-state)
  ((-obj- (f-layer)) f1-module)
  ((-obj- (idx3-ddstate)) f1-state)
  ((-obj- (f-layer)) f2-module))

(defmethod net-fff net-fff (thickin thick0 thick1 thick2 ini inj prm)
  ((-obj- (idx1-ddparam)) prm)
  (-int- ini inj thickin thick0 thick1 thick2)
  (let ((f0-squash (new idx3-squasher))
	(f1-squash (new idx3-squasher))
	(f2-squash (new idx3-squasher)))
  (setq f0-module (new f-layer thickin thick0 ini inj f0-squash prm))
  (setq f0-state (new idx3-ddstate thick0 ini inj))
  (setq f1-module (new f-layer thick0 thick1 ini inj f1-squash prm))
  (setq f1-state (new idx3-ddstate thick1 ini inj))
  (setq f2-module (new f-layer thick1 thick2 ini inj f2-squash prm))
  () ) )

(defmethod net-fff fprop (in out)
  ((-obj- (idx3-state)) in)
  ((-obj- (idx3-state)) out)
  (==> f0-module fprop in f0-state)
  (==> f1-module fprop f0-state f1-state)
  (==> f2-module fprop f1-state out)
  ())

(defmethod net-fff bprop (in out)
  ((-obj- (idx3-dstate)) in)
  ((-obj- (idx3-dstate)) out)
  (==> f2-module bprop f1-state out)
  (==> f1-module bprop f0-state f1-state)
  (==> f0-module bprop in f0-state)
  ())

(defmethod net-fff bbprop (in out)
  ((-obj- (idx3-ddstate)) in)
  ((-obj- (idx3-ddstate)) out)
  (==> f2-module bbprop f1-state out)
  (==> f1-module bbprop f0-state f1-state)
  (==> f0-module bbprop in f0-state)
  ())

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(dhc-make "net-fff" (net-fff net-fff fprop bprop bbprop))
;; constructor is removed because of bumping bug
;; (dhc-make "net-fff" (net-fff fprop bprop bbprop))
