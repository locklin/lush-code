;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; a lenet5 with the "RBF" layer on top
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(mload "libnets")
(mload "net-cscf")

(printf "[%s]\n" file-being-loaded)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(defclass net-cscfe idx3-module
  ((-obj- (net-cscf)) net)
  ((-obj- (idx3-ddstate)) netout)
  ((-obj- (e-layer)) rbf))

(defmethod net-cscfe net-cscfe (n e thick si sj)
  ((-obj- (net-cscf)) n)
  ((-obj- (e-layer)) e)
  ((-int-) thick si sj)
  (setq net n)
  (setq netout (new idx3-ddstate thick si sj))
  (setq rbf e)
  ())

(defmethod net-cscfe fprop (in out)
  ((-obj- (idx3-state)) in)
  ((-obj- (idx3-state)) out)
  (==> net fprop in netout)
  (==> rbf fprop netout out)
  ())

(defmethod net-cscfe bprop (in out)
  ((-obj- (idx3-dstate)) in)
  ((-obj- (idx3-dstate)) out)
  (==> rbf bprop netout out)
  (==> net bprop in netout)
  ())

(defmethod net-cscfe bbprop (in out)
  ((-obj- (idx3-ddstate)) in)
  ((-obj- (idx3-ddstate)) out)
  (==> rbf bbprop netout out)
  (==> net bbprop in netout)
  ())
  
(defmethod net-cscfe forget (v p)
  ((-flt-) v p)
  (==> net forget v p)
  (==> rbf forget v p)
  ())

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(dhc-make "net-cscfe" (net-cscfe net-cscfe fprop bprop bbprop forget))
;; (dhc-make "net-cscfe" (net-cscfe fprop bprop bbprop forget))

