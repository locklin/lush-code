#? File "idx-squops.sn"
;; matrix and tensor operations that use
;; the squares of the elements
;; (primarily used for bbprop operations).
;;.SEE (idx-m1squextm1 <m1> <m2> <m3>)
;;.SEE (idx-m2squextm2 <m1> <m2> <m3>)
;;.SEE (idx-m1squextm1acc <m1> <m2> <m3>)
;;.SEE (idx-m2squextm2acc <m1> <m2> <m3>)
;;.SEE (idx-m2squdotm1 <m1> <m2> <m3>)
;;.SEE (idx-m4squdotm2 <m1> <m2> <m3>)
;;.SEE (idx-m2squdotm1acc <m1> <m2> <m3>)
;;.SEE (idx-m4squdotm2acc <m1> <m2> <m3>)
;;.SEE (idx-m1squdotm1acc <m1> <m2> <m3>)
;;.SEE (idx-m2squdotm2acc <m1> <m2> <m3>)

(mload "dh-compile")

(printf "[%s]\n" file-being-loaded)

;; stuff is in a handwritten C file for 
;; historical reasons. It should really be 
;; generated by the compiler.
(cc-load "cfiles/idxsquops.c")

#? (idx-m1squextm1 <m1> <m2> <m3>)
;; square outer product of <m1> and <m2>.
;; M3ij = M1i * M2j^2

#? (idx-m2squextm2 <m1> <m2> <m3>)
;; square outer product of <m1> and <m2>.
;; M3ijkl = M1ij * M2kl^2

#? (idx-m1squextm1acc <m1> <m2> <m3>)
;; square outer product of <m1> and <m2>.
;; M3ij += M1i * M2j^2

#? (idx-m2squextm2acc <m1> <m2> <m3>)
;; square outer product of <m1> and <m2>.
;; M3ijkl += M1ij * M2kl^2

#? (idx-m2squdotm1 <m1> <m2> <m3>)
;; multiply vector <m2> by matrix <m1>
;; using square of <m1> elements
;; M3i = sum_j M1ij^2 * M2j

#? (idx-m4squdotm2 <m1> <m2> <m3>)
;; multiply matrix <m2> by tensor <m1>
;; using square of <m1> elements
;; M3ij = sum_kl M1ijkl^2 * M2kl

#? (idx-m2squdotm1acc <m1> <m2> <m3>)
;; multiply vector <m2> by matrix <m1>
;; using square of <m1> elements
;; M3i += sum_j M1ij^2 * M2j

#? (idx-m4squdotm2acc <m1> <m2> <m3>)
;; multiply matrix <m2> by tensor <m1>
;; using square of <m1> elements
;; M3ij += sum_kl M1ijkl^2 * M2kl

#? (idx-m1squdotm1acc <m1> <m2> <m3>)
;; dot product between <m1> and <m2>, except
;; square of terms of <m1> are used:
;; M3 += sum_i M1i^2 * M2i

#? (idx-m2squdotm2acc <m1> <m2> <m3>)
;; dot product between matrices <m1> and 
;; <m2>, except square of terms of <m1> 
;; are used:
;; M3 += sum_ij M1ij^2 * M2ij

