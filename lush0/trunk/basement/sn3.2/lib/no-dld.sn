;;; SN3.2 Lisp interpreter and development tools
;;; Copyright (C) 1987-2001 Leon Bottou, Yann LeCun, and AT&T.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; This file is part of the subset of SN3.2 that does not belong
;;; to Neuristique (e.g. either belongs to Leon Bottou, 
;;; Yann LeCun, or AT&T.
;;; It is distributed with Lush with the purpose of serving
;;; as a reserve of code to be ported to Lush.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(when ~:dld-works

(printf "[%s]\n" file-being-loaded)

;; obj must be a .so file
(de dhc-make-so (src obj &optional cflags)
  (sys (print (concat dhc-cname " -I" sn3-dir "include -c -D"
               (upcase (pname :operating-system)) " "
                      (if cflags
                          cflags
                        dhc-cflags )
                      ;;" -shared -o " ;; that is to try actual dynamic linking
                      " -o "       ;; and that is to do simply static linking with sn
                      obj
                      " "
                      src ))) )

;; e.g. to redefine compiler: (setq dhc-cname "gcc")
;;
;; redefine dhc-make-o for non dld operating systems
(de dhc-make-o (src obj &optional cflags)
	0)


(setq :dyn-objects-list ())

(unlock-symbol mod-inquire dhc-load dhc-make mod-list)
(de mod-load (o-f)
     (setq :dyn-objects-list (cons o-f :dyn-objects-list)) "")
(de mod-inquire (o-f) ())
(de dhc-load args ())  
(de mod-list () ())

(when ~no-dld-loaded
  (setq orig-dhc-make-c dhc-make-c)
  (setq dhc-make-c (lambda args ()))
)

(setq no-dld-loaded t)

)

