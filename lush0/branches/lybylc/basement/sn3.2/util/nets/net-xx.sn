;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; a module that contains two idx3-modules connected in sequence
;; makes it easy to define things like 2-layer fully connected nets
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(mload "libnets")

(printf "[%s]\n" file-being-loaded)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defclass net-xx idx3-module
  ((-obj- (idx3-module)) module-1)
  ((-obj- (idx3-ddstate)) state-1)
  ((-obj- (idx3-module)) module-2))

(defmethod net-xx net-xx (mod1 thick1 si1 sj1 mod2)
  ((-obj- (idx3-module)) mod1 mod2)
  (-int- thick1 si1 sj1)
  (setq module-1 mod1)
  (setq state-1 (new idx3-ddstate thick1 si1 sj1))
  (setq module-2 mod2)
  ())

(defmethod net-xx fprop (in out)
  ((-obj- (idx3-state)) in)
  ((-obj- (idx3-state)) out)
  (==> module-1 fprop in state-1)
  (==> module-2 fprop state-1 out)
  ())

(defmethod net-xx bprop (in out)
  ((-obj- (idx3-dstate)) in)
  ((-obj- (idx3-dstate)) out)
  (==> module-2 bprop state-1 out)
  (==> module-1 bprop in state-1)
  ())

(defmethod net-xx bbprop (in out)
  ((-obj- (idx3-ddstate)) in)
  ((-obj- (idx3-ddstate)) out)
  (==> module-2 bbprop state-1 out)
  (==> module-1 bbprop in state-1)
  ())


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(dhc-make "net-xx"
	  (net-xx net-xx fprop bprop bbprop)
	  )
