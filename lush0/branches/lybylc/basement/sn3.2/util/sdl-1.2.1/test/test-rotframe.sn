
(setq p (img-load "games/lem.png"))
(setq m (sdl-surface-to-idx p))
(new-window)

(de asd (w h cx cy a c)
    (setq wh (int-matrix 2))
    (setq cxcy (matrix 2))
    (rgbaim-rotscale-rect w h cx cy a c wh cxcy)
    (setq z (ubyte-matrix (wh 1) (wh 0) 4))
    (setq bg (ubyte-matrix 4))
    (bg () '(0 0 255 0))
    (rgbaim-rotscale m cx cy z (cxcy 0) (cxcy 1) a c bg)
    (color-rgb 1 0 0)
    (rgb-draw-matrix 10 10 m 1 1)
    (fill-rect (+ 10 cx) (+ 10 cy) 2 2)
    (rgb-draw-matrix 10 200 z 1 1)
    (fill-rect (+ 10 (cxcy 0)) (+ 200 (cxcy 1)) 2 2))

(load "sdl/libsdl-demo")

(de test-idx2sur ()
    (when (not window) (new-window))
    (cls)
    (setq s1 (img-load "games/lem.png"))
    (setq m1 (sdl-surface-to-idx s1))
    (rgb-draw-matrix 10 10 m1 1 1)
    (setq s2 (idx-to-sdl-surface m1))
    (setq m2 (sdl-surface-to-idx s2))
    (rgb-draw-matrix 10 200 m2 1 1))

(de test-rotframe ()
    (setq scr (new screen 640 480 "Lander"))
    (setq lem (new sprite scr 0))
    (==> lem load-frame "../games/lem.png" 0 40 35)
    (==> lem move 50 100)
    (==> lem draw)
    (for (i 1 12)
      (==> lem rotscale-frame 0 i (* 30 i) 1)
      (==> lem set-frame i)
      (==> lem moverel 80 0)
      (==> lem draw))
    (==> lem move 50 200)
    (for (i 1 12)
      (==> lem rotscale-frame 0 i (* 30 i) 0.75)
      (==> lem set-frame i)
      (==> lem moverel 80 0)
      (==> lem draw))
    (==> lem move 50 300)
    (for (i 1 12)
      (==> lem rotscale-frame 0 i (* 30 i) 0.5)
      (==> lem set-frame i)
      (==> lem moverel 80 0)
      (==> lem draw))
    (==> scr flip))
