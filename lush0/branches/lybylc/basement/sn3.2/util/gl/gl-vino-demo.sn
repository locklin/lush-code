
(mload "video/video-vino")
(mload "gl/gl")
(mload "libidx")

(de gl-vino-demo (zoom)
    (let* ((si (/ 480 zoom))
           (sj (/ 640 zoom))
           (z (ubyte-matrix si sj 4))
           (last (ubyte-matrix si sj 4))
           (m (ubyte-matrix si sj 4)))
      (gl-prefsize sj si)
      (setq win (gl-winopen "asd"))
      (gl-rgbmode)
      (gl-snpixmode)
      (gl-gconfig)
      (setq vin (new video-vino))
      (==> vin begin zoom 0 0 0 0 1 10 1)
      (while t
        (gl-vino-loop vin m last z)
        (let ((tt last)) (setq last m) (setq m tt)))))

(de gl-vino-loop (vin m last z)
    ((-obj- (video-vino)) vin)
    ((-idx3- (-ubyte-)) m last z)
    (==> vin grabto m)
    (cinline-idx2loop3 m "unsigned char" last "unsigned char" z "unsigned char"
                       "m" "last" "z" "i" "j"
                       #{
                       z[3] = ((int)(m[3]) + 256 - (int)(last[3]))>>1 ;
                       z[2] = ((int)(m[2]) + 256 - (int)(last[2]))>>1 ;
                       z[1] = ((int)(m[1]) + 256 - (int)(last[1]))>>1 ;
                       #} )
    (gl-draw-matrix 0 0 z) ())

(dhc-make "gl_vino_demo" gl-vino-loop)

(gl-vino-demo 2)
