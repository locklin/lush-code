#? *** Databases

NOTE: This package is not a traditional "database" interface package.
It is a library simply designed as a data handling mechanism for the
(now obsolete) <gblearning> machine learning package. That packages
has been replaces by <gblearn2> which does not use the present library
but uses its own mechanism called data sources.

In the <gblearning> library, the workbench and trainer classes access 
traning and testing samples through a "database". Several base classes 
are provided here to make it easy to build databases of training or 
test samples. The workbnech/trainer classes accept databases
as long as they understand the following methods:
{<ul>
  {<li> {<c> (==> db size)}: number of element in database (-1 if infinite)}
  {<li> {<c> (==> db seek i)}: go to element <i>}
  {<li> {<c> (==> db tell)}: return index of current element}
  {<li> {<c> (==> <db> next)}: go to next element}
  {<li> {<c> (==> <db> get-input-current [dest])}: write input component
            of current element into <dest>, or return result if no <dest>.}
  {<li> {<c> (==> <db> get-label-current [dest])}: write label component
            of current element into <dest>, or return result if no <dest>.}
}
<base-db> is the base class from which actual db classes can be derived
(though some db classes are created from scratch so as to be compilable).
Several pre-defined types of base-db compatible classes are provided for 
combining the content of existing base-db compatible objects.

#? ** << libdb/base-db.lsh

#? ** << libdb/image-db.lsh

