;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "opencv/cv-config")



#? *** aux_imageio

;; dummy function that adds OpenCV C header files in C file
(eval `(de dummy_aux_imageio () ,cv-cpheader-cmd ()))

#? * (dummy_aux_imageio)
#? * (jpeg-pread-bgra <file>)
#? * (jpeg-pread-bgr <file>)
#? * (floatidx_ptr <s>)
#? * (intidx_ptr <s>)
#? * (showidx <img>)
#? * (dummy)


;; ********************************************************

;;(mload "stdio/stdio")
;;(mload "libimage/pnm")


#? (jpeg-pread-bgra <file>)
;; read a JPEG image into an RGBA matrix using djpeg through a pipe.
;; For some unknown reason this function is not very reliable.
(de jpeg-pread-bgra (file)
    ((-str-) file)
    (cheader "#include <stdio.h>\n")
    (let ((f (popen (concat "djpeg " file) "r"))
          (nlin 0) (ncol 0))
      ((-int-) nlin ncol)
      (when (not f) (error "can't start jpeg decompressor djpeg"))
      (if (<> 2 (int #{ fscanf((FILE *)$f,"P6 %d %d 255\n",&($ncol), &($nlin)) #}))
          (progn (pclose f) (error "bad JPEG file"))
        (let ((rez (ubyte-matrix nlin ncol 4)))
          #{{
          int i,j;
          unsigned char *prez;
          prez = IDX_PTR($rez,unsigned char);
          for (i=0; i<$nlin; i++) {
               for (j=0; j<$ncol; j++) { 
                    *(prez+2) = (unsigned char) getc((FILE *)$f);  //R
                    *(prez+1) = (unsigned char) getc((FILE *)$f);  //G
                    *prez     = (unsigned char) getc((FILE *)$f);  //B
                    *(prez+3) = 0;                                 //A
		    prez +=4;
               }
          } } #}
          (pclose f)
          rez))))


(de jpeg-pread-bgr (file)
    ((-str-) file)
    (cheader "#include <stdio.h>\n")
    (let ((f (popen (concat "djpeg " file) "r"))
          (nlin 0) (ncol 0))
      ((-int-) nlin ncol)
      (when (not f) (error "can't start jpeg decompressor djpeg"))
      (if (<> 2 (int #{ fscanf((FILE *)$f,"P6 %d %d 255\n",&($ncol), &($nlin)) #}))
          (progn (pclose f) (error "bad JPEG file"))
        (let ((rez (ubyte-matrix nlin ncol 3)))
          #{{
          int i,j;
          unsigned char *prez;
          prez = IDX_PTR($rez,unsigned char);
          for (i=0; i<$nlin; i++) {
               for (j=0; j<$ncol; j++) { 
                    *(prez+2) = (unsigned char) getc((FILE *)$f);  //R
                    *(prez+1) = (unsigned char) getc((FILE *)$f);  //G
                    *prez     = (unsigned char) getc((FILE *)$f);  //B
                    //*(prez+3) = 0;                                 //A
		    //prez +=4;
		    prez +=3;
               }
          } } #}
          (pclose f)
          rez))))

(de floatidx_ptr (s)
    ((-idx2- (-float-)) s)
    (gptr #{ IDX_PTR($s,float) #}))

(de intidx_ptr (s)
    ((-idx2- (-int-)) s)
    (gptr #{ IDX_PTR($s,int) #} ))

(de showidx (img)
    (setq screen (new-window 0 0 (idx-dim img 1) (idx-dim img 0)))
    (rgb-draw-matrix 0 0 img)
    screen)

(de dummy () 
    (cpheader "#include \"mycv.h\"")  
    ())



;; ********************************************************

(dhc-make ()
  dummy_aux_imageio
  jpeg-pread-bgra
  jpeg-pread-bgr
  floatidx_ptr
  intidx_ptr
  showidx
  dummy
)
