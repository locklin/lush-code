;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "opencv/cv-config")



#? *** floodfill

;; dummy function that adds OpenCV C header files in C file
(eval `(de dummy_floodfill () ,cv-cpheader-cmd ()))

;; #? * (dummy_floodfill)
;; #? * (cvfloodfill <array> <seedpoint> <newval> <lodiff> <updiff> <comp> <connectivity>)

;; ********************************************************

;;  /****************************************************************************************\
;;  *                                     Flood fill                                         *
;;  \****************************************************************************************/

#? (cvFloodFill  <array> <seedpoint> <newval> <lodiff> <updiff> <comp> <connectivity>)
;;.VP
;;  /*F///////////////////////////////////////////////////////////////////////////////////////
;;  //    Name: cvFloodFill, cvFloodFill
;;  //    Purpose: The function fills the connected domain, starting from seed pixel
;;  //             while the pixel values in this domain are not far from each other.
;;  //    Context:
;;  //    Parameters:
;;  //      img        - initial image(in the beginning)
;;  //                   which is "repainted" during the function action,
;;  //      seedPoint  - coordinates of the seed point inside image ROI,
;;  //      newVal     - new value of repainted area pixels,
;;  //      loDiff, upDiff - maximal lower and upper differences of the values of
;;  //                   appurtenant to repainted area pixel and one of its
;;  //                   neighbour,
;;  //      comp       - pointer to connected component structure of the
;;  //                   repainted area
;;  //      connectivity - if it is 4, the function looks for 4-connected neighbors,
;;  //                     otherwise it looks for 8-connected neighbors.
;;  //    Notes:
;;  //F*/
;;  OPENCVAPI  void  cvFloodFill( CvArr* array, CvPoint seedPoint,
;;                                double newVal, double loDiff, double upDiff,
;;                                CvConnectedComp* comp, int connectivity CV_DEFAULT(4) );

(de cvFloodFill (array seedpoint newval lodiff updiff comp connectivity)
    ((-gptr- "CvArr *") array)
    ((-gptr- "CvPoint *") seedpoint)
    ((-double-) newval lodiff updiff)
    ((-gptr- "CvConnectedComp *") comp)
    ((-int-) connectivity)
    #{ cvFloodFill($array, *$seedpoint, $newval, $lodiff, $updiff, $comp, $connectivity); #}
    ())
;; ********************************************************

(dhc-make ()
  dummy_floodfill
  cvfloodfill
)
