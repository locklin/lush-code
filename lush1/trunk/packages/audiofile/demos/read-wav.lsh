;; read and display a WAV file.
;; Yann LeCun, October 2002.

(load "audiofile/audiofile")

(de audiofile-read (f)
  (let ((fhandle (afOpenFile f "r" (gptr ()) ))
	(sampfmt (int-matrix))
	(sampwidth (int-matrix)))
    (afGetRate fhandle @@AF_DEFAULT_TRACK)
    (afGetTrackBytes fhandle @@AF_DEFAULT_TRACK)
    (afGetByteOrder fhandle @@AF_DEFAULT_TRACK)
    (afGetChannels fhandle @@AF_DEFAULT_TRACK)
    (afGetSampleFormat  
     fhandle @@AF_DEFAULT_TRACK (idx-ptr sampfmt) (idx-ptr sampwidth))
    (afGetCompression fhandle  @@AF_DEFAULT_TRACK)
    (afGetDataOffset  fhandle  @@AF_DEFAULT_TRACK)
    (afGetFrameCount  fhandle  @@AF_DEFAULT_TRACK)
    (let* ((count (afGetFrameCount fhandle @@AF_DEFAULT_TRACK))
	   (data 
	    (if (or (= (sampfmt) 402) (= (sampfmt) 401))
		(cond
		 ((= 8 (sampwidth)) (ubyte-matrix count))
		 ((= 16 (sampwidth)) (short-matrix count))
		 ((= 32 (sampwidth)) (int-matrix count))
		 (t (error "can't deal with this audio sample format")))
	      ;; float
	      (cond
	       ((= 32 (sampwidth)) (float-matrix count))
	       ((= 64 (sampwidth)) (double-matrix count))
	       (t (error "can't deal with this audio sample format"))))))
      ;; read frame
      (afReadFrames fhandle @@AF_DEFAULT_TRACK (idx-ptr data) count)
      data)))
    

(de plot-wave (x y w off sx sy)
  (let ((lx x) (ly (+ y (* sy (- (w 0) off)))))
    (for (i 0 (1- (idx-dim w 0)))
	 (draw-line lx ly (+ x i) (+ y (* sy (- (w i) off))))
	 (setq lx (+ x i)) (setq ly (+ y (* sy (- (w i) off)))))))


(setq wave (audiofile-read 
	    (concat-fname lushdir "packages/audiofile/demos/space.wav")))

(for (k 0 (- (idx-dim wave 0) 500) 5)
     (graphics-batch
      (cls)
      (plot-wave 10 250 (narrow wave 0 500 k) 128 1 3)))
