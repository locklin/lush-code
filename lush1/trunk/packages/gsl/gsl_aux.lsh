;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; $Id: gsl_aux.lsh,v 1.1 2002-09-03 04:56:04 profshadoko Exp $
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "gsl-config")



#? *** gsl_aux

;; dummy function that adds GSL C header files in C file
(eval `(de dummy_gsl_aux () ,gsl-cpheader-cmd ()))

#? * (dummy_gsl_aux)
#? * (gsl_aux_dummy)

;; ********************************************************

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; $Id: gsl_aux.lsh,v 1.1 2002-09-03 04:56:04 profshadoko Exp $
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(libload "gsl/gsl-config.lsh")
(libload "gsl/gsl_aux_alloc.lsh")
(libload "gsl/gsl_macro_func.lsh")
(libload "gsl/gsl_complex_aux.lsh")
(libload "gsl/gsl_vector_aux.lsh")
(libload "gsl/gsl_matrix_aux.lsh")
(libload "gsl/gsl_sf_aux.lsh")
(libload "gsl/gsl_rng_aux.lsh")
(libload "gsl/gsl_qrng_aux.lsh")
(libload "gsl/gsl_aux_convert.lsh")

(setq macro_funs '(
"gsl_fn_eval" ))

(setq globalvar_funs '(
"extern_gsl_root_fsolver_bisection" 
"extern_gsl_root_fsolver_brent"
"extern_gsl_root_fsolver_falsepos" 
"extern_gsl_root_fdfsolver_newton"
"extern_gsl_root_fdfsolver_secant" 
"extern_gsl_root_fdfsolver_steffenson" 
"extern_gsl_min_fminimizer_goldensection" 
"extern_gsl_min_fminimizer_brent" 
"extern_gsl_multifit_fdfsolver_lmsder"
"extern_gsl_multimin_fdfminimizer_steepest_descent" 
"extern_gsl_multimin_fdfminimizer_conjugate_pr"
"extern_gsl_multimin_fdfminimizer_conjugate_fr" 
"extern_gsl_multimin_fdfminimizer_vector_bfgs"
"extern_gsl_multiroot_fsolver_dnewton" 
"extern_gsl_multiroot_fsolver_broyden"
"extern_gsl_multiroot_fsolver_hybrids"
"extern_gsl_multiroot_fdfsolver_newton" 
"extern_gsl_multiroot_fdfsolver_gnewton"
"extern_gsl_multiroot_fdfsolver_hybridj" 
"extern_gsl_multiroot_fdfsolver_hybridsj"
"extern_gsl_interp_linear" 
"extern_gsl_interp_polynomial"
"extern_gsl_interp_cspline" 
"extern_gsl_interp_cspline_periodic"
"extern_gsl_interp_akima" 
"extern_gsl_interp_akima_periodic"
"extern_gsl_odeiv_step_rk2" 
"extern_gsl_odeiv_step_rk4"
"extern_gsl_odeiv_step_rkck"
"extern_gsl_odeiv_step_rk8pd" 
"extern_gsl_odeiv_step_rk2imp"
"extern_gsl_odeiv_step_rk4imp" 
"extern_gsl_odeiv_step_bsimp"
"extern_gsl_odeiv_step_gear1" 
"extern_gsl_odeiv_step_gear2"
))
  
(setq alloc_funs '(
"alloc_gsl_fft_halfcomplex_wavetable" 
"memsize_gsl_fft_halfcomplex_wavetable"
"alloc_gsl_fft_real_wavetable_float" 
"memsize_gsl_fft_real_wavetable_float"
"alloc_gsl_fft_real_workspace_float" 
"memsize_gsl_fft_real_workspace_float"
"alloc_gsl_fft_real_wavetable" 
"memsize_gsl_fft_real_wavetable"
"alloc_gsl_fft_real_workspace" 
"memsize_gsl_fft_real_workspace"
"alloc_gsl_histogram2d" 
"memsize_gsl_histogram2d"
"alloc_gsl_histogram2d_pdf" 
"memsize_gsl_histogram2d_pdf"
"alloc_gsl_histogram" 
"memsize_gsl_histogram"
"alloc_gsl_histogram_pdf" 
"memsize_gsl_histogram_pdf"
"alloc_gsl_ieee_float_rep" 
"memsize_gsl_ieee_float_rep"
"alloc_gsl_ieee_double_rep" 
"memsize_gsl_ieee_double_rep"
"alloc_gsl_integration_workspace" 
"memsize_gsl_integration_workspace"
"alloc_gsl_integration_qaws_table" 
"memsize_gsl_integration_qaws_table"
"alloc_gsl_integration_qawo_table" 
"memsize_gsl_integration_qawo_table"
"alloc_gsl_interp_accel" 
"memsize_gsl_interp_accel"
"alloc_gsl_interp_type" 
"memsize_gsl_interp_type"
"alloc_gsl_interp" 
"memsize_gsl_interp"
"alloc_gsl_min_fminimizer_type" 
"memsize_gsl_min_fminimizer_type"
"alloc_gsl_min_fminimizer" 
"memsize_gsl_min_fminimizer"
"alloc_gsl_monte_miser_state" 
"memsize_gsl_monte_miser_state"
"alloc_gsl_monte_plain_state" 
"memsize_gsl_monte_plain_state"
"alloc_gsl_monte_vegas_state" 
"memsize_gsl_monte_vegas_state"
"alloc_gsl_multifit_linear_workspace" 
"memsize_gsl_multifit_linear_workspace"
"alloc_gsl_multifit_function" 
"memsize_gsl_multifit_function"
"alloc_gsl_multifit_fsolver_type" 
"memsize_gsl_multifit_fsolver_type"
"alloc_gsl_multifit_fsolver" 
"memsize_gsl_multifit_fsolver"
"alloc_gsl_ntuple" 
"memsize_gsl_ntuple"
"alloc_gsl_ntuple_select_fn" 
"memsize_gsl_ntuple_select_fn"
"alloc_gsl_ntuple_value_fn" 
"memsize_gsl_ntuple_value_fn"
"alloc_gsl_odeiv_evolve" 
"memsize_gsl_odeiv_evolve"
"alloc_gsl_permutation" 
"memsize_gsl_permutation"
"alloc_gsl_poly_complex_workspace" 
"memsize_gsl_poly_complex_workspace"
"alloc_gsl_qrng_type" 
"memsize_gsl_qrng_type"
"alloc_gsl_qrng" 
"memsize_gsl_qrng"
"alloc_gsl_ran_discrete_t" 
"memsize_gsl_ran_discrete_t"
"alloc_gsl_root_fsolver_type" 
"memsize_gsl_root_fsolver_type"
"alloc_gsl_root_fsolver" 
"memsize_gsl_root_fsolver"
"alloc_gsl_root_fdfsolver_type" 
"memsize_gsl_root_fdfsolver_type"
"alloc_gsl_root_fdfsolver" 
"memsize_gsl_root_fdfsolver"
"alloc_gsl_siman_params_t" 
"memsize_gsl_siman_params_t"
"alloc_gsl_spline" 
"memsize_gsl_spline"
"alloc_gsl_sum_levin_u_workspace" 
"memsize_gsl_sum_levin_u_workspace"
"alloc_gsl_sum_levin_utrunc_workspace" 
"memsize_gsl_sum_levin_utrunc_workspace"
"alloc_gsl_function" 
"memsize_gsl_function"
"alloc_gsl_function_fdf" 
"memsize_gsl_function_fdf"
"alloc_gsl_function_vec" 
"memsize_gsl_function_vec"
"alloc_gsl_multifit_function_fdf" 
"memsize_gsl_multifit_function_fdf"
"alloc_gsl_multifit_fdfsolver_type" 
"memsize_gsl_multifit_fdfsolver_type"
"alloc_gsl_multifit_fdfsolver" 
"memsize_gsl_multifit_fdfsolver"
"alloc_gsl_multimin_function" 
"memsize_gsl_multimin_function"
"alloc_gsl_multimin_function_fdf" 
"memsize_gsl_multimin_function_fdf"
"alloc_gsl_multimin_fdfminimizer_type" 
"memsize_gsl_multimin_fdfminimizer_type"
"alloc_gsl_multimin_fdfminimizer" 
"memsize_gsl_multimin_fdfminimizer"
"alloc_gsl_multiroot_function" 
"memsize_gsl_multiroot_function"
"alloc_gsl_multiroot_fsolver_type" 
"memsize_gsl_multiroot_fsolver_type"
"alloc_gsl_multiroot_fsolver" 
"memsize_gsl_multiroot_fsolver"
"alloc_gsl_multiroot_function_fdf" 
"memsize_gsl_multiroot_function_fdf"
"alloc_gsl_multiroot_fdfsolver_type" 
"memsize_gsl_multiroot_fdfsolver_type"
"alloc_gsl_multiroot_fdfsolver" 
"memsize_gsl_multiroot_fdfsolver"
"alloc_gsl_odeiv_system" 
"memsize_gsl_odeiv_system"
"alloc_gsl_odeiv_step_type" 
"memsize_gsl_odeiv_step_type"
"alloc_gsl_odeiv_step" 
"memsize_gsl_odeiv_step"
"alloc_gsl_odeiv_control_type" 
"memsize_gsl_odeiv_control_type"
"alloc_gsl_odeiv_control" 
"memsize_gsl_odeiv_control"
"alloc_gsl_monte_function" 
"memsize_gsl_monte_function"
"alloc_gsl_cheb_series" 
"memsize_gsl_cheb_series"
"alloc_gsl_combination" 
"memsize_gsl_combination"
"alloc_gsl_dht" 
"memsize_gsl_dht"
"alloc_gsl_eigen_symm_workspace" 
"memsize_gsl_eigen_symm_workspace"
"alloc_gsl_eigen_symmv_workspace" 
"memsize_gsl_eigen_symmv_workspace"
"alloc_gsl_eigen_herm_workspace" 
"memsize_gsl_eigen_herm_workspace"
"alloc_gsl_eigen_hermv_workspace" 
"memsize_gsl_eigen_hermv_workspace"
"alloc_gsl_fft_complex_wavetable_float" 
"memsize_gsl_fft_complex_wavetable_float"
"alloc_gsl_fft_complex_workspace_float" 
"memsize_gsl_fft_complex_workspace_float"
"alloc_gsl_fft_complex_wavetable" 
"memsize_gsl_fft_complex_wavetable"
"alloc_gsl_fft_complex_workspace" 
"memsize_gsl_fft_complex_workspace"
"alloc_gsl_fft_halfcomplex_wavetable_float" 
"memsize_gsl_fft_halfcomplex_wavetable_float"
"setval_function_gsl_function" 
"setval_params_gsl_function"
"setval_f_gsl_function_fdf" 
"setval_df_gsl_function_fdf"
"setval_fdf_gsl_function_fdf" 
"setval_params_gsl_function_fdf"
"setval_f_gsl_multiroot_function" 
"setval_n_gsl_multiroot_function"
"setval_params_gsl_multiroot_function"
"setval_f_gsl_multimin_function" 
"setval_n_gsl_multimin_function"
"setval_params_gsl_multimin_function" 
"setval_f_gsl_multimin_function_fdf" 
"setval_df_gsl_multimin_function_fdf"
"setval_fdf_gsl_multimin_function_fdf" 
"setval_n_gsl_multimin_function_fdf"
"setval_params_gsl_multimin_function_fdf"
"getval_gradient_gsl_multimin_fdfminimizer" 
"getval_x_gsl_multimin_fdfminimizer"
 ))


(setq complex_funs '(
"alloc_gsl_complex_long_double" 
"memsize_gsl_complex_long_double" 
"memsize_gsl_complex"  
"alloc_gsl_complex_float" 
"memsize_gsl_complex_float" 
))

(setq vector_funs '(
"alloc_gsl_vector_view" 
"memsize_gsl_vector_view" 
"memsize_gsl_vector_const_view" 
"memsize_gsl_vector_float_view" 
"memsize_gsl_vector_float_const_view" 
"memsize_gsl_vector_int_view" 
"alloc_gsl_vector_int_const_view" 
"memsize_gsl_vector_int_const_view" 
"memsize_gsl_vector_long_double_view" 
"memsize_gsl_vector_long_double_const_view" 
"memsize_gsl_vector_long_view" 
"alloc_gsl_vector_long_const_view" 
"memsize_gsl_vector_long_const_view" 
"memsize_gsl_vector_short_view" 
"memsize_gsl_vector_short_const_view" 
"memsize_gsl_vector_uchar_view" 
"memsize_gsl_vector_uchar_const_view" 
"alloc_gsl_vector_uint_view" 
"memsize_gsl_vector_uint_view" 
"memsize_gsl_vector_uint_const_view" 
"alloc_gsl_vector_ulong_view" 
"memsize_gsl_vector_ulong_view" 
"alloc_gsl_vector_ulong_const_view" 
"memsize_gsl_vector_ulong_const_view" 
"alloc_gsl_vector_ushort_view" 
"memsize_gsl_vector_ushort_view" 
"alloc_gsl_vector_ushort_const_view" 
"memsize_gsl_vector_ushort_const_view" 
"alloc_gsl_vector_char_view" 
"memsize_gsl_vector_char_view" 
"alloc_gsl_vector_char_const_view" 
"memsize_gsl_vector_char_const_view" 
"alloc_gsl_vector_complex_view" 
"memsize_gsl_vector_complex_view" 
"alloc_gsl_vector_complex_const_view" 
"memsize_gsl_vector_complex_const_view" 
"alloc_gsl_vector_complex_float_view" 
"memsize_gsl_vector_complex_float_view" 
"alloc_gsl_vector_complex_float_const_view" 
"memsize_gsl_vector_complex_float_const_view" 
"alloc_gsl_vector_complex_long_double_view" 
"memsize_gsl_vector_complex_long_double_view" 
"alloc_gsl_vector_complex_long_double_const_view" 
"memsize_gsl_vector_complex_long_double_const_view"
))


(setq matrix_funs '(
"alloc_gsl_matrix_view" 
"memsize_gsl_matrix_view" 
"memsize_gsl_matrix_const_view" 
"alloc_gsl_matrix_float_view" 
"memsize_gsl_matrix_float_view" 
"alloc_gsl_matrix_float_const_view" 
"memsize_gsl_matrix_float_const_view" 
"alloc_gsl_matrix_int_view" 
"memsize_gsl_matrix_int_view" 
"alloc_gsl_matrix_int_const_view" 
"memsize_gsl_matrix_int_const_view" 
"alloc_gsl_matrix_long_double_view" 
"memsize_gsl_matrix_long_double_view" 
"alloc_gsl_matrix_long_double_const_view" 
"memsize_gsl_matrix_long_double_const_view" 
"alloc_gsl_matrix_long_view" 
"memsize_gsl_matrix_long_view" 
"alloc_gsl_matrix_long_const_view" 
"memsize_gsl_matrix_long_const_view" 
"alloc_gsl_matrix_short_view" 
"memsize_gsl_matrix_short_view" 
"alloc_gsl_matrix_short_const_view" 
"memsize_gsl_matrix_short_const_view" 
"alloc_gsl_matrix_uchar_view" 
"memsize_gsl_matrix_uchar_view" 
"alloc_gsl_matrix_uchar_const_view" 
"memsize_gsl_matrix_uchar_const_view" 
"alloc_gsl_matrix_uint_view" 
"memsize_gsl_matrix_uint_view" 
"alloc_gsl_matrix_uint_const_view" 
"memsize_gsl_matrix_uint_const_view" 
"alloc_gsl_matrix_ulong_view" 
"memsize_gsl_matrix_ulong_view" 
"alloc_gsl_matrix_ulong_const_view" 
"memsize_gsl_matrix_ulong_const_view" 
"alloc_gsl_matrix_ushort_view" 
"memsize_gsl_matrix_ushort_view" 
"alloc_gsl_matrix_ushort_const_view" 
"memsize_gsl_matrix_ushort_const_view" 
"alloc_gsl_matrix_char_view" 
"memsize_gsl_matrix_char_view" 
"alloc_gsl_matrix_char_const_view" 
"memsize_gsl_matrix_char_const_view" 
"alloc_gsl_matrix_complex_view" 
"memsize_gsl_matrix_complex_view" 
"alloc_gsl_matrix_complex_const_view" 
"memsize_gsl_matrix_complex_const_view" 
"alloc_gsl_matrix_complex_float_view" 
"memsize_gsl_matrix_complex_float_view" 
"alloc_gsl_matrix_complex_float_const_view" 
"memsize_gsl_matrix_complex_float_const_view" 
"alloc_gsl_matrix_complex_long_double_view" 
"memsize_gsl_matrix_complex_long_double_view" 
"alloc_gsl_matrix_complex_long_double_const_view" 
"memsize_gsl_matrix_complex_long_double_const_view"
))

(setq sf_funs '(
"alloc_gsl_sf_result"
"memsize_gsl_sf_result"
"alloc_gsl_sf_result_e10" 
"memsize_gsl_sf_result_e10"
))

(setq rng_funs '(
"memsize_gsl_rng_type" 
"gsl_rng_borosh13" 
"gsl_rng_coveyou" 
"gsl_rng_cmrg" 
"gsl_rng_fishman18" 
"gsl_rng_fishman2x" 
"gsl_rng_gfsr4" 
"gsl_rng_knuthran"   
"gsl_rng_knuthran2" 
"gsl_rng_lecuyer21" 
"gsl_rng_minstd" 
"gsl_rng_mrg" 
"gsl_rng_mt19937" 
"gsl_rng_r250" 
"gsl_rng_ran0" 
"gsl_rng_ran1"          
"gsl_rng_ran2" 
"gsl_rng_ran3" 
"gsl_rng_rand" 
"gsl_rng_rand48"      
"gsl_rng_random128_bsd" 
"gsl_rng_random128_glibc2" 
"gsl_rng_random128_libc5" 
"gsl_rng_random256_glibc2" 
"gsl_rng_random256_libc5" 
"gsl_rng_random32_glibc2" 
"gsl_rng_random64_bsd" 
"gsl_rng_random64_libc5" 
"gsl_rng_random8_bsd" 
"gsl_rng_random8_glibc2" 
"gsl_rng_random8_libc5" 
"gsl_rng_random_bsd" 
"gsl_rng_random_glibc2" 
"gsl_rng_random_libc5" 
"gsl_rng_randu" 
"gsl_rng_ranf" 
"gsl_rng_ranlux" 
"gsl_rng_ranlux389" 
"gsl_rng_ranlxd1" 
"gsl_rng_ranlxd2" 
"gsl_rng_ranlxs0" 
"gsl_rng_ranlxs1"        
"gsl_rng_ranlxs2" 
"gsl_rng_ranmar" 
"gsl_rng_slatec" 
"gsl_rng_taus" 
"gsl_rng_transputer" 
"gsl_rng_tt800" 
"gsl_rng_uni" 
"gsl_rng_uni32" 
"gsl_rng_vax" 
"gsl_rng_waterman14" 
"gsl_rng_zuf"
))

(setq qrng_funs '(
"gsl_qrng_niederreiter_2" 
"gsl_qrng_sobol"
))

(setq convert_funs '(
"idx8u_gsl_vector_uchar" 
"idx8s_gsl_vector_char" 
"idx16s_gsl_vector_short" 
"idx32s_gsl_vector_int"
"idx32f_gsl_vector_float" 
"idx64f_gsl_vector" 
"idx32f_gsl_vector_complex_float" 
"idx64f_gsl_vector_complex"
"gsl_vector_uchar_idx8u" 
"gsl_vector_char_idx8s" 
"gsl_vector_short_idx16s" 
"gsl_vector_int_idx32s"
"gsl_vector_float_idx32f" 
"gsl_vector_idx64f" 
"gsl_vector_complex_float_idx32f" 
"gsl_vector_complex_idx64f"
"idx8u_gsl_matrix_uchar" 
"idx8s_gsl_matrix_char" 
"idx16s_gsl_matrix_short" 
"idx32s_gsl_matrix_int"
"idx32f_gsl_matrix_float" 
"idx64f_gsl_matrix" 
"idx32f_gsl_matrix_complex_float" 
"idx64f_gsl_matrix_complex"
"gsl_matrix_uchar_idx8u" 
"gsl_matrix_char_idx8s" 
"gsl_matrix_short_idx16s" 
"gsl_matrix_int_idx32s"
"gsl_matrix_float_idx32f" 
"gsl_matrix_idx64f" 
"gsl_matrix_complex_float_idx32f" 
"gsl_matrix_complex_idx64f"
))

(de gsl_aux_dummy ()
    (cpheader "#include <gsl/gsl_errno.h>")
    (cpheader "#include <gsl/gsl_math.h>")
    (cpheader "#include <gsl/gsl_ieee_utils.h>")

    (cpheader "#include <gsl/gsl_poly.h>")
    (cpheader "#include <gsl/gsl_blas.h>")
    (cpheader "#include <gsl/gsl_blas_types.h>")
    (cpheader "#include <gsl/gsl_cblas.h>")
    (cpheader "#include <gsl/gsl_block_complex.h>")
    (cpheader "#include <gsl/gsl_block.h>")
    (cpheader "#include <gsl/gsl_chebyshev.h>")
    (cpheader "#include <gsl/gsl_combination.h>")
    (cpheader "#include <gsl/gsl_complex.h>")
    (cpheader "#include <gsl/gsl_complex_math.h>")
    (cpheader "#include <gsl/gsl_const_cgs.h>")
    (cpheader "#include <gsl/gsl_const.h>")
    (cpheader "#include <gsl/gsl_const_mks.h>")
    (cpheader "#include <gsl/gsl_const_num.h>")
    (cpheader "#include <gsl/gsl_dft_complex_float.h>")
    (cpheader "#include <gsl/gsl_dft_complex.h>")
    (cpheader "#include <gsl/gsl_dht.h>")
    (cpheader "#include <gsl/gsl_diff.h>")
    (cpheader "#include <gsl/gsl_eigen.h>")

    (cpheader "#include <gsl/gsl_fft_complex_float.h>")
    (cpheader "#include <gsl/gsl_fft_complex.h>")
    (cpheader "#include <gsl/gsl_fft.h>")
    (cpheader "#include <gsl/gsl_fft_halfcomplex_float.h>")
    (cpheader "#include <gsl/gsl_fft_halfcomplex.h>")
    (cpheader "#include <gsl/gsl_fft_real_float.h>")
    (cpheader "#include <gsl/gsl_fft_real.h>")
    (cpheader "#include <gsl/gsl_fit.h>")
    (cpheader "#include <gsl/gsl_heapsort.h>") 
    (cpheader "#include <gsl/gsl_histogram2d.h>")
    (cpheader "#include <gsl/gsl_histogram.h>")

    (cpheader "#include <gsl/gsl_integration.h>")
    (cpheader "#include <gsl/gsl_interp.h>")
    (cpheader "#include <gsl/gsl_linalg.h>")
    (cpheader "#include <gsl/gsl_machine.h>")

    (cpheader "#include <gsl/gsl_matrix.h>") 
    (cpheader "#include <gsl/gsl_message.h>")
    (cpheader "#include <gsl/gsl_min.h>")
    (cpheader "#include <gsl/gsl_mode.h>")
    (cpheader "#include <gsl/gsl_monte.h>")
    (cpheader "#include <gsl/gsl_monte_miser.h>")
    (cpheader "#include <gsl/gsl_monte_plain.h>")
    (cpheader "#include <gsl/gsl_monte_vegas.h>")
    (cpheader "#include <gsl/gsl_multifit.h>")
    (cpheader "#include <gsl/gsl_multifit_nlin.h>")
    (cpheader "#include <gsl/gsl_multimin.h>")
    (cpheader "#include <gsl/gsl_multiroots.h>")
    (cpheader "#include <gsl/gsl_nan.h>")
    (cpheader "#include <gsl/gsl_ntuple.h>")
    (cpheader "#include <gsl/gsl_odeiv.h>")
    (cpheader "#include <gsl/gsl_permutation.h>")
    (cpheader "#include <gsl/gsl_permute.h>")
    (cpheader "#include <gsl/gsl_permute_vector.h>")
    (cpheader "#include <gsl/gsl_poly.h>")
    (cpheader "#include <gsl/gsl_pow_int.h>")
    (cpheader "#include <gsl/gsl_precision.h>")
    (cpheader "#include <gsl/gsl_qrng.h>")
    (cpheader "#include <gsl/gsl_randist.h>")
    (cpheader "#include <gsl/gsl_rng.h>")
    (cpheader "#include <gsl/gsl_roots.h>")
    (cpheader "#include <gsl/gsl_siman.h>")
    (cpheader "#include <gsl/gsl_sort.h>")
    (cpheader "#include <gsl/gsl_sort_vector.h>")
    (cpheader "#include <gsl/gsl_specfunc.h>")
    (cpheader "#include <gsl/gsl_spline.h>")
    (cpheader "#include <gsl/gsl_statistics.h>")
    (cpheader "#include <gsl/gsl_sum.h>")
    (cpheader "#include <gsl/gsl_sys.h>")
    (cpheader "#include <gsl/gsl_test.h>")
    (cpheader "#include <gsl/gsl_vector_complex.h>")
    (cpheader "#include <gsl/gsl_vector.h>")
    (cpheader "#include <gsl/gsl_version.h>")
    ())

(setq funclist 
      (cons "gsl_aux_dummy" 
	    (append 
	     macro_funs globalvar_funs alloc_funs 
	     complex_funs vector_funs matrix_funs     
	     sf_funs rng_funs qrng_funs 
	     convert_funs)))

(mload "dh-compile")
(mod-dlopen "/usr/local/lib/libgslcblas.so")
(mod-dlopen "/usr/local/lib/libgsl.so")
(apply dhc-make (cons "gsl_aux" (mapcar named (mapcar downcase funclist))))

;; ********************************************************

(dhc-make ()
  dummy_gsl_aux
  gsl_aux_dummy
)
