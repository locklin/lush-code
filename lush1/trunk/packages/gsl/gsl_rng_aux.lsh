;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; $Id: gsl_rng_aux.lsh,v 1.1 2002-09-03 04:56:04 profshadoko Exp $
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "gsl-config")



#? *** gsl_rng_aux

;; dummy function that adds GSL C header files in C file
(eval `(de dummy_gsl_rng_aux () ,gsl-cpheader-cmd ()))

#? * (dummy_gsl_rng_aux)
#? * (alloc_gsl_rng_type)
#? * (memsize_gsl_rng_type)
#? * (gsl_rng_borosh13)
#? * (gsl_rng_coveyou)
#? * (gsl_rng_cmrg)
#? * (gsl_rng_fishman18)
#? * (gsl_rng_fishman20)
#? * (gsl_rng_fishman2x)
#? * (gsl_rng_gfsr4)
#? * (gsl_rng_knuthran)
#? * (gsl_rng_knuthran2)
#? * (gsl_rng_lecuyer21)
#? * (gsl_rng_minstd)
#? * (gsl_rng_mrg)
#? * (gsl_rng_mt19937)
#? * (gsl_rng_r250)
#? * (gsl_rng_ran0)
#? * (gsl_rng_ran1)
#? * (gsl_rng_ran2)
#? * (gsl_rng_ran3)
#? * (gsl_rng_rand)
#? * (gsl_rng_rand48)
#? * (gsl_rng_random128_bsd)
#? * (gsl_rng_random128_glibc2)
#? * (gsl_rng_random128_libc5)
#? * (gsl_rng_random256_bsd)
#? * (gsl_rng_random256_glibc2)
#? * (gsl_rng_random256_libc5)
#? * (gsl_rng_random32_bsd)
#? * (gsl_rng_random32_glibc2)
#? * (gsl_rng_random32_libc5)
#? * (gsl_rng_random64_bsd)
#? * (gsl_rng_random64_glibc2)
#? * (gsl_rng_random64_libc5)
#? * (gsl_rng_random8_bsd)
#? * (gsl_rng_random8_glibc2)
#? * (gsl_rng_random8_libc5)
#? * (gsl_rng_random_bsd)
#? * (gsl_rng_random_glibc2)
#? * (gsl_rng_random_libc5)
#? * (gsl_rng_randu)
#? * (gsl_rng_ranf)
#? * (gsl_rng_ranlux)
#? * (gsl_rng_ranlux389)
#? * (gsl_rng_ranlxd1)
#? * (gsl_rng_ranlxd2)
#? * (gsl_rng_ranlxs0)
#? * (gsl_rng_ranlxs1)
#? * (gsl_rng_ranlxs2)
#? * (gsl_rng_ranmar)
#? * (gsl_rng_slatec)
#? * (gsl_rng_taus)
#? * (gsl_rng_transputer)
#? * (gsl_rng_tt800)
#? * (gsl_rng_uni)
#? * (gsl_rng_uni32)
#? * (gsl_rng_vax)
#? * (gsl_rng_waterman14)
#? * (gsl_rng_zuf)

;; ********************************************************


;;##  gsl_rng_type;

(de alloc_gsl_rng_type ()
    (gptr #{ malloc(sizeof(gsl_rng_type)) #} ))

(de memsize_gsl_rng_type ()
    (int #{ sizeof(gsl_rng_type) #}))


(de gsl_rng_borosh13 ()
    (gptr #{ gsl_rng_borosh13 #}))

(de gsl_rng_coveyou ()
    (gptr #{ gsl_rng_coveyou #}))

(de gsl_rng_cmrg ()
    (gptr #{ gsl_rng_cmrg #}))

(de gsl_rng_fishman18 ()
    (gptr #{ gsl_rng_fishman18 #}))

(de gsl_rng_fishman20 ()
    (gptr #{ gsl_rng_fishman20 #}))

(de gsl_rng_fishman2x ()
    (gptr #{ gsl_rng_fishman2x #}))

(de gsl_rng_gfsr4 ()
    (gptr #{ gsl_rng_gfsr4 #}))

(de gsl_rng_knuthran ()
    (gptr #{ gsl_rng_knuthran #}))

(de gsl_rng_knuthran2 ()
    (gptr #{ gsl_rng_knuthran2 #}))

(de gsl_rng_lecuyer21 ()
    (gptr #{ gsl_rng_lecuyer21 #}))

(de gsl_rng_minstd ()
    (gptr #{ gsl_rng_minstd #}))

(de gsl_rng_mrg ()
    (gptr #{ gsl_rng_mrg #}))

(de gsl_rng_mt19937 ()
    (gptr #{ gsl_rng_mt19937 #}))

(de gsl_rng_r250 ()
    (gptr #{ gsl_rng_r250 #}))

(de gsl_rng_ran0 ()
    (gptr #{ gsl_rng_ran0 #}))

(de gsl_rng_ran1 ()
    (gptr #{ gsl_rng_ran1 #}))

(de gsl_rng_ran2 ()
    (gptr #{ gsl_rng_ran2 #}))

(de gsl_rng_ran3 ()
    (gptr #{ gsl_rng_ran3 #}))

(de gsl_rng_rand ()
    (gptr #{ gsl_rng_rand #}))

(de gsl_rng_rand48 ()
    (gptr #{ gsl_rng_rand48 #}))

(de gsl_rng_random128_bsd ()
    (gptr #{ gsl_rng_random128_bsd #}))

(de gsl_rng_random128_glibc2 ()
    (gptr #{ gsl_rng_random128_glibc2 #}))

(de gsl_rng_random128_libc5 ()
    (gptr #{ gsl_rng_random128_libc5 #}))

(de gsl_rng_random256_bsd ()
    (gptr #{ gsl_rng_random256_bsd #}))

(de gsl_rng_random256_glibc2 ()
    (gptr #{ gsl_rng_random256_glibc2 #}))

(de gsl_rng_random256_libc5 ()
    (gptr #{ gsl_rng_random256_libc5 #}))

(de gsl_rng_random32_bsd ()
    (gptr #{ gsl_rng_random32_bsd #}))

(de gsl_rng_random32_glibc2 ()
    (gptr #{ gsl_rng_random32_glibc2 #}))

(de gsl_rng_random32_libc5 ()
    (gptr #{ gsl_rng_random32_libc5 #}))

(de gsl_rng_random64_bsd ()
    (gptr #{ gsl_rng_random64_bsd #}))

(de gsl_rng_random64_glibc2 ()
    (gptr #{ gsl_rng_random64_glibc2 #}))

(de gsl_rng_random64_libc5 ()
    (gptr #{ gsl_rng_random64_libc5 #}))

(de gsl_rng_random8_bsd ()
    (gptr #{ gsl_rng_random8_bsd #}))

(de gsl_rng_random8_glibc2 ()
    (gptr #{ gsl_rng_random8_glibc2 #}))

(de gsl_rng_random8_libc5 ()
    (gptr #{ gsl_rng_random8_libc5 #}))

(de gsl_rng_random_bsd ()
    (gptr #{ gsl_rng_random_bsd #}))

(de gsl_rng_random_glibc2 ()
    (gptr #{ gsl_rng_random_glibc2 #}))

(de gsl_rng_random_libc5 ()
    (gptr #{ gsl_rng_random_libc5 #}))

(de gsl_rng_randu ()
    (gptr #{ gsl_rng_randu #}))

(de gsl_rng_ranf ()
    (gptr #{ gsl_rng_ranf #}))

(de gsl_rng_ranlux ()
    (gptr #{ gsl_rng_ranlux #}))

(de gsl_rng_ranlux389 ()
    (gptr #{ gsl_rng_ranlux389 #}))

(de gsl_rng_ranlxd1 ()
    (gptr #{ gsl_rng_ranlxd1 #}))

(de gsl_rng_ranlxd2 ()
    (gptr #{ gsl_rng_ranlxd2 #}))

(de gsl_rng_ranlxs0 ()
    (gptr #{ gsl_rng_ranlxs0 #}))

(de gsl_rng_ranlxs1 ()
    (gptr #{ gsl_rng_ranlxs1 #}))

(de gsl_rng_ranlxs2 ()
    (gptr #{ gsl_rng_ranlxs2 #}))

(de gsl_rng_ranmar ()
    (gptr #{ gsl_rng_ranmar #}))

(de gsl_rng_slatec ()
    (gptr #{ gsl_rng_slatec #}))

(de gsl_rng_taus ()
    (gptr #{ gsl_rng_taus #}))

(de gsl_rng_transputer ()
    (gptr #{ gsl_rng_transputer #}))

(de gsl_rng_tt800 ()
    (gptr #{ gsl_rng_tt800 #}))

(de gsl_rng_uni ()
    (gptr #{ gsl_rng_uni #}))

(de gsl_rng_uni32 ()
    (gptr #{ gsl_rng_uni32 #}))

(de gsl_rng_vax ()
    (gptr #{ gsl_rng_vax #}))

(de gsl_rng_waterman14 ()
    (gptr #{ gsl_rng_waterman14 #}))

(de gsl_rng_zuf ()
    (gptr #{ gsl_rng_zuf #}))


;; ********************************************************

(dhc-make ()
  dummy_gsl_rng_aux
  alloc_gsl_rng_type
  memsize_gsl_rng_type
  gsl_rng_borosh13
  gsl_rng_coveyou
  gsl_rng_cmrg
  gsl_rng_fishman18
  gsl_rng_fishman20
  gsl_rng_fishman2x
  gsl_rng_gfsr4
  gsl_rng_knuthran
  gsl_rng_knuthran2
  gsl_rng_lecuyer21
  gsl_rng_minstd
  gsl_rng_mrg
  gsl_rng_mt19937
  gsl_rng_r250
  gsl_rng_ran0
  gsl_rng_ran1
  gsl_rng_ran2
  gsl_rng_ran3
  gsl_rng_rand
  gsl_rng_rand48
  gsl_rng_random128_bsd
  gsl_rng_random128_glibc2
  gsl_rng_random128_libc5
  gsl_rng_random256_bsd
  gsl_rng_random256_glibc2
  gsl_rng_random256_libc5
  gsl_rng_random32_bsd
  gsl_rng_random32_glibc2
  gsl_rng_random32_libc5
  gsl_rng_random64_bsd
  gsl_rng_random64_glibc2
  gsl_rng_random64_libc5
  gsl_rng_random8_bsd
  gsl_rng_random8_glibc2
  gsl_rng_random8_libc5
  gsl_rng_random_bsd
  gsl_rng_random_glibc2
  gsl_rng_random_libc5
  gsl_rng_randu
  gsl_rng_ranf
  gsl_rng_ranlux
  gsl_rng_ranlux389
  gsl_rng_ranlxd1
  gsl_rng_ranlxd2
  gsl_rng_ranlxs0
  gsl_rng_ranlxs1
  gsl_rng_ranlxs2
  gsl_rng_ranmar
  gsl_rng_slatec
  gsl_rng_taus
  gsl_rng_transputer
  gsl_rng_tt800
  gsl_rng_uni
  gsl_rng_uni32
  gsl_rng_vax
  gsl_rng_waterman14
  gsl_rng_zuf
)
