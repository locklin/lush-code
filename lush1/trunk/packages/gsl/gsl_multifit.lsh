;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; $Id: gsl_multifit.lsh,v 1.1 2002-09-03 04:56:04 profshadoko Exp $
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "gsl-config")



#? *** gsl_multifit

;; dummy function that adds GSL C header files in C file
(eval `(de dummy_gsl_multifit () ,gsl-cpheader-cmd ()))

#? * (dummy_gsl_multifit)
#? * (gsl_multifit_linear_alloc <n> <p>)
#? * (gsl_multifit_linear_free <work>)
#? * (gsl_multifit_linear <x> <y> <c> <cov> <chisq> <work>)
#? * (gsl_multifit_wlinear <x> <w> <y> <c> <cov> <chisq> <work>)

;; ********************************************************



(de gsl_multifit_linear_alloc (    n  p )
    ((-int-) n)                     ;; size_t -> int
    ((-int-) p)                     ;; size_t -> int
    (gptr #{ gsl_multifit_linear_alloc (  $n ,$p) #} )          ;; gsl_multifit_linear_workspace * -> gptr
)


(de gsl_multifit_linear_free (    work )
    ((-gptr- "gsl_multifit_linear_workspace *") work) 
    #{ gsl_multifit_linear_free (  $work) #} 
    ()
)


(de gsl_multifit_linear (    x  y  c  cov  chisq  work )
    ((-gptr- "const gsl_matrix *") x) 
    ((-gptr- "const gsl_vector *") y) 
    ((-gptr- "gsl_vector *") c) 
    ((-gptr- "gsl_matrix *") cov) 
    ((-gptr- "double *") chisq) 
    ((-gptr- "gsl_multifit_linear_workspace *") work) 
    (int #{ gsl_multifit_linear (  $x ,$y ,$c ,$cov ,$chisq ,$work) #} )
)


(de gsl_multifit_wlinear (    x  w  y  c  cov  chisq  work )
    ((-gptr- "const gsl_matrix *") x) 
    ((-gptr- "const gsl_vector *") w) 
    ((-gptr- "const gsl_vector *") y) 
    ((-gptr- "gsl_vector *") c) 
    ((-gptr- "gsl_matrix *") cov) 
    ((-gptr- "double *") chisq) 
    ((-gptr- "gsl_multifit_linear_workspace *") work) 
    (int #{ gsl_multifit_wlinear (  $x ,$w ,$y ,$c ,$cov ,$chisq ,$work) #} )
)


;; ********************************************************

(dhc-make ()
  dummy_gsl_multifit
  gsl_multifit_linear_alloc
  gsl_multifit_linear_free
  gsl_multifit_linear
  gsl_multifit_wlinear
)
