;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; $Id: gsl_real_float.lsh,v 1.1 2002-09-03 04:56:04 profshadoko Exp $
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "gsl-config")



#? *** gsl_real_float

;; dummy function that adds GSL C header files in C file
(eval `(de dummy_gsl_real_float () ,gsl-cpheader-cmd ()))

#? * (dummy_gsl_real_float)
#? * (gsl_fft_real_float_radix2_transform <data> <stride> <n>)
#? * (gsl_fft_real_wavetable_float_alloc <n>)
#? * (gsl_fft_real_wavetable_float_free <wavetable>)
#? * (gsl_fft_real_workspace_float_alloc <n>)
#? * (gsl_fft_real_workspace_float_free <workspace>)
#? * (gsl_fft_real_float_transform <data> <stride> <n> <wavetable> <work>)
#? * (gsl_fft_real_float_unpack <real_float_coefficient> <complex_coefficient> <stride> <n>)

;; ********************************************************


(de gsl_fft_real_float_radix2_transform (    data  stride  n )
    ((-gptr- "float *") data) 
    ((-int-) stride)                     ;; size_t -> int
    ((-int-) n)                     ;; size_t -> int
    (int #{ gsl_fft_real_float_radix2_transform (  $data ,$stride ,$n)  #} )
)


(de gsl_fft_real_wavetable_float_alloc (    n )
    ((-int-) n)                     ;; size_t -> int
    (gptr #{ gsl_fft_real_wavetable_float_alloc (  $n) #} )          ;; gsl_fft_real_wavetable_float * -> gptr
)


(de gsl_fft_real_wavetable_float_free (    wavetable )
    ((-gptr- "gsl_fft_real_wavetable_float *") wavetable) 
    #{ gsl_fft_real_wavetable_float_free (  $wavetable) #} 
    ()
)


(de gsl_fft_real_workspace_float_alloc (    n )
    ((-int-) n)                     ;; size_t -> int
    (gptr #{ gsl_fft_real_workspace_float_alloc (  $n) #} )          ;; gsl_fft_real_workspace_float * -> gptr
)


(de gsl_fft_real_workspace_float_free (    workspace )
    ((-gptr- "gsl_fft_real_workspace_float *") workspace) 
    #{ gsl_fft_real_workspace_float_free (  $workspace) #} 
    ()
)


(de gsl_fft_real_float_transform (    data  stride  n  wavetable  work )
    ((-gptr- "float *") data) 
    ((-int-) stride)                     ;; size_t -> int
    ((-int-) n)                     ;; size_t -> int
    ((-gptr- "const gsl_fft_real_wavetable_float *") wavetable) 
    ((-gptr- "gsl_fft_real_workspace_float *") work) 
    (int #{ gsl_fft_real_float_transform (  $data ,$stride ,$n ,$wavetable ,$work) #} )
)



(de gsl_fft_real_float_unpack (    real_float_coefficient  complex_coefficient  stride  n )
    ((-gptr- "const float *") real_float_coefficient) 
    ((-gptr- "float *") complex_coefficient) 
    ((-int-) stride)                     ;; size_t -> int
    ((-int-) n)                     ;; size_t -> int
    (int #{ gsl_fft_real_float_unpack (  $real_float_coefficient ,$complex_coefficient ,$stride ,$n) #} )
)


;; ********************************************************

(dhc-make ()
  dummy_gsl_real_float
  gsl_fft_real_float_radix2_transform
  gsl_fft_real_wavetable_float_alloc
  gsl_fft_real_wavetable_float_free
  gsl_fft_real_workspace_float_alloc
  gsl_fft_real_workspace_float_free
  gsl_fft_real_float_transform
  gsl_fft_real_float_unpack
)
