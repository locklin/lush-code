;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; $Id: gsl_sf_aux.lsh,v 1.1 2002-09-03 04:56:04 profshadoko Exp $
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "gsl-config")



#? *** gsl_sf_aux

;; dummy function that adds GSL C header files in C file
(eval `(de dummy_gsl_sf_aux () ,gsl-cpheader-cmd ()))

#? * (dummy_gsl_sf_aux)
#? * (alloc_gsl_sf_result)
#? * (memsize_gsl_sf_result)
#? * (alloc_gsl_sf_result_e10)
#? * (memsize_gsl_sf_result_e10)

;; ********************************************************

;;##  gsl_sf_result;

(de alloc_gsl_sf_result ()
    (gptr #{ malloc(sizeof(gsl_sf_result)) #} ))

(de memsize_gsl_sf_result ()
    (int #{ sizeof(gsl_sf_result) #}))

;;##  gsl_sf_result_e10;

(de alloc_gsl_sf_result_e10 ()
    (gptr #{ malloc(sizeof(gsl_sf_result_e10)) #} ))

(de memsize_gsl_sf_result_e10 ()
    (int #{ sizeof(gsl_sf_result_e10) #}))

;; ********************************************************

(dhc-make ()
  dummy_gsl_sf_aux
  alloc_gsl_sf_result
  memsize_gsl_sf_result
  alloc_gsl_sf_result_e10
  memsize_gsl_sf_result_e10
)
