
(libload "sdl/libsdl")

(de lander1 ()
    ;; initialize the SDL subsystem. DONT FORGET THIS!!!
    (sdl-initialize)
    (setq scr (new sdl-screen 640 480 "Lander")) ; open screen
    ;; create background sprite
    (setq bgd (new sdl-sprite scr 0))
    (==> bgd load-frame "moon.png" 0 0 0)
    (==> bgd move 0 0)
    ;; create lem sprite
    (setq ship (new sdl-sprite scr 1))     
    (==> ship load-frame "lem.png" 0 0 0)
    ;; set position of ship
    (setq x 10) (setq y 20)
    ;; create event object
    (setq event (new sdl-event))
    (setq xyk (int-matrix 3))

    (while (not stop)
      (==> scr clear)                 ; fill image with black
      (==> bgd draw)                  ; draw moon ground
      (==> event get-arrows xyk)      ; read keyboard
      (when (= (xyk 2) SDLK_q) (setq stop t)) ; stop when q is pressed
      (setq x (+ x (* 10 (xyk 0))))
      (setq y (+ y (* 10 (xyk 1))))
      (==> ship move x y)              ; move ship sprite to position
      (==> ship draw)                  ; draw ship
      (==> scr flip)                  ; flip screens
      ))

(de lander2 ()
    ;; initialize the SDL subsystem. DONT FORGET THIS!!!
    (sdl-initialize)
    (let* ((scr (new sdl-screen 640 480 "Lander")) ; open screen
           (bgd (new sdl-sprite scr 0))     ; create background sprite
           (ship (new sdl-sprite scr 1))     ; create lem sprite
           ;; set position, velocity, acceleration of ship
           (x 10) (y 20) (vx 4) (vy 0) (ax 0) (ay 0)
           ;; set mass, inverse mass, and deltat of ship
           (mass 1) (mass-inv (/ 1 mass)) (deltat 0.01)
           (side-thrust 200)            ; set side engine thrust
           (main-thrust 400)            ; set main engine thrust
           (grav 200)                   ; set gravity coefficient in pixels/s/s
           (stop ())
           (event (new sdl-event))
           (xyk (int-matrix 3))
           (ground 360))
      (==> bgd load-frame "moon.png" 0 0 0)
      (==> bgd move 0 0)
      (==> ship load-frame "lem.png" 0 0 0)
      (while (not stop)
        (==> scr clear)                 ; fill image with black
        (==> bgd draw)                  ; draw moon ground
        (==> event get-arrows xyk)      ; read keyboard
        (when (= (xyk 2) SDLK_q) (setq stop t)) ; stop when q is pressed
        (setq ax (* mass-inv side-thrust (xyk 0))) ; update acceleration 
        (setq ay (+ grav (* mass-inv main-thrust (xyk 1)))) ; update acceleration 
        (setq vx (+ vx (* ax deltat)))  ; update velocity
        (setq vy (+ vy (* ay deltat)))  ; update velocity
        (setq x  (+ x (* vx deltat)))   ; update position
        (setq y  (+ y (* vy deltat)))   ; update position
        (when (< x -80) (setq x (+ 640 (- x -80)))) ; wrap around left side
        (when (> x 640) (setq x (+ -80 (- x 640)))) ; wrap around right side
        (when (> y ground)              ; bounce on ground
          (setq vy (* -0.5 vy)) 
          (setq vx (* 0.25 vx)) 
          (setq y ground))
        (==> ship move x y)              ; move ship sprite to position
        (==> ship draw)                  ; draw ship
        (==> scr flip)                  ; flip screens
        (setq deltat :scr:deltat)       ; update deltat to time between screen flips
        )))
