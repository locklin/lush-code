(ogre)
(libload "libogre/treebrowser")
(libload "help")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#? (helptool [<book> [<title>]])
;;.AUTHOR Yann LeCun
;; Main documentation graphical browser for Lush.
;; Helptool provides an "explorer-like" GUI to browse through
;; the sections and entries of the documentation.
;; The optional argument can be one of the following:
;;.LI
;; if absent or nil, the default documentation book
;; is read from lsh/lush-manual.hlp (if necessary)
;; and displayed. This book is not read twice.
;;.LI
;; if equal to t, the default document book
;; is read (even if it was previsouly read), and displayed.
;;.LI
;; if equal to a string, a documentation book is read
;; from the file passed in the string (which can be a .hlp
;; or a .lsh file). The second optional argument is used as the 
;; title of the book. If the second argument is not present,
;; the first argument will be used as the title. 
;; This is a convenient way of browsing the documentation
;; of a Lush program that is not part of the standard package.
;; It is also a convenient way to use Lush as a documentation
;; browser for other projects.
;;.P
;; Reading the entire Lush manual may take several seconds. 
;;.P
;; Examples:
;;.CODE
;;  (helptool t)                          ; force re-reading of lush manual
;;  (helptool "sdl/sdl.hlp")              ; browse sdl.hlp file
;;  (helptool "sdl/libsdl.lsh" "LibSDL")  ; browse entries in libsdl.lsh
;;  (helptool "/home/yann/blah.hlp "my blah")
;;.P
(de helptool (&optional book title)
  (cond 
   ((not book) (setq book (read-help-book ())))
   ((= t book) (setq book (read-help-book t)))
   ((stringp book)
    (setq book (new help-book book (if title title book))))
   (t (error "invalid helptool argument")))
  (let ((hp (read-help-book force)))
    (setq *help-tool* 
	  (new windowobject 0 0 490 650 "Lush Manual"
	       (new TreeBrowser 482 570 10 (==> book make-ltree))))))


