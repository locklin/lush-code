;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; $Id: lushenv.lsh,v 1.13 2002-10-01 22:38:13 profshadoko Exp $
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Defines the standard Lush environment and autoload functions
;; On startup, Lush looks for this file (or for lushenv.lshc, or for 
;; lushenv with no extension) in the following directories:
;; current directory, <lushdir>/local, <lushdir>/packages,
;; <lushdir>/lsh, and finally <lushdir>/sys.
;; In the standard distribution, lushenv.lsh is placed in <lushdir>/lsh.

;; ------------------------------------------------------------
;; Setup path

(addpath (concat-fname lushdir "lsh"))
(addpath (concat-fname (concat-fname lushdir "lsh") "libstd"))
(addpath (concat-fname (concat-fname lushdir "lsh") "libidx"))
(addpath (concat-fname (concat-fname lushdir "lsh") "compiler"))
(addpath (concat-fname (concat-fname lushdir "lsh") "libogre"))
(addpath (concat-fname (concat-fname lushdir "lsh") "graphics"))

(each ((d (list "packages" "local")))
  (let ((fd (concat-fname lushdir d)))
    (when (dirp fd) (addpath fd))))


;; ------------------------------------------------------------
;; Setup paths for include files and libraries

(let ((lprepend (mlambda(fn lname dir)
                  `(let ((dir ,dir))
                     (when (and (dirp dir) (not (member dir ,lname)))
                       (setq ,lname (cons dir ,lname)) ) ) ))
      (lappend  (mlambda(fn lname dir)
                  `(let ((dir ,dir))
                     (when (and (dirp dir) (not (member dir ,lname)))
                       (setq ,lname (append ,lname (list dir))) ) ) ) ) )
  
  (lappend c-include-path      "/usr/local/include")
  (lappend shared-library-path "/usr/local/lib")
  (lappend static-library-path "/usr/local/lib")
  
  (each ((flag (regex-split "[^\t ]+" (or (getconf "LIBS") ""))))
    (when (= (left flag 2) "-L")
      (lprepend shared-library-path (mid flag 3))
      (lprepend static-library-path (mid flag 3)) ) )

  (each ((flag (regex-split "[^\t ]+" (or (getconf "X_LIBS") ""))))
    (when (= (left flag 2) "-L")
      (lprepend shared-library-path (mid flag 3))
      (lprepend static-library-path (mid flag 3)) ) )
  
  (each ((flag (regex-split "[^\t ]+" (or (getconf "X_CFLAGS") ""))))
    (when (= (left flag 2) "-I")
      (lprepend c-include-path (mid flag 3)) ) )
  
  (lprepend c-include-path (concat-fname lushdir "include")) 
  
  t )


;; ------------------------------------------------------------
;; Load standard library files

(libload "libstd/compat")
(libload "libstd/graphenv")
(libload "libstd/brace")


;; ------------------------------------------------------------
;; Autoload tools and libraries

(autoload "help" 
  apropos )

(autoload "libogre/ogre" 
  ogre )

(autoload "libogre/helptool" 
  helptool )

(autoload "libogre/classtool" 
  classtool )

(autoload "libogre/calctool" 
  calctool )

;;(autoload "libogre/tltools"
;;  browse
;;  display-curve )

(autoload "libstd/dz" 
  dz 
  zlambda 
  dz-compile )

(autoload "compiler/dh-compile" 
  dhc-make 
  dhc-make-with-libs
  dhc-make-with-c++ 
  dhc-make-test
  compilablep )



;; ------------------------------------------------------------
;; Process LUSHRC file on UNIX systems (must be last section)

;; Location of compiled versions of installed lsh files.
(defvar varlushdir ())

(when (and getpid (not wintl3p))
  ;; Check for .lush directory
  (let ((home (getenv "HOME")))
    (when (<> home "")
      (let* ((mylushdir (concat-fname home ".lush"))
             (mylushrc (concat-fname mylushdir "lushrc.lsh")) )
        (when (not (dirp mylushdir))
          (printf "*** First time user: Creating directory %s\n" mylushdir) 
          (mkdir mylushdir) )
        (when (not (filep mylushrc))
          (printf "*** First time user: Creating initial file %s\n" mylushrc)
          (writing mylushrc
            (printf ";;; Customize this LUSHRC file as you see fit.\n") ) )
        ;; Make a decision regarding varlushdir
        (let ((owner (alist-get 'uid (fileinfo lushdir))))
          (when (and getuid owner (<> (getuid) owner))
            (setq varlushdir mylushdir) ) )
        (lock-symbol varlushdir)
        ;; Load lushrc
        (libload mylushrc) ) ) ) )
