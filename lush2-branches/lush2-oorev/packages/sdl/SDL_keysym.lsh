;; /*
;;     SDL - Simple DirectMedia Layer
;;     Copyright (C) 1997, 1998, 1999, 2000, 2001  Sam Lantinga
;; 
;;     This library is free software; you can redistribute it and/or
;;     modify it under the terms of the GNU Library General Public
;;     License as published by the Free Software Foundation; either
;;     version 2 of the License, or (at your option) any later version.
;; 
;;     This library is distributed in the hope that it will be useful,
;;     but WITHOUT ANY WARRANTY; without even the implied warranty of
;;     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;;     Library General Public License for more details.
;; 
;;     You should have received a copy of the GNU Library General Public
;;     License along with this library; if not, write to the Free
;;     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
;; 
;;     Sam Lantinga
;;     slouken@devolution.com
;; */
;; 
;; #ifdef SAVE_RCSID
;; static char rcsid =
;;  "@(#) $Id: SDL_keysym.lsh,v 1.1 2002/08/19 07:04:08 profshadoko Exp $";
;; #endif
;; 
;; #ifndef _SDL_keysym_h
;; #define _SDL_keysym_h
;; 
;; /* What we really want is a mapping of every raw key on the keyboard.
;;    To support international keyboards, we use the range 0xA1 - 0xFF
;;    as international virtual keycodes.  We'll follow in the footsteps of X11...
;;    The names of the keys
;;  */
;;  
;; typedef enum {
;; 	/* The keyboard syms have been cleverly chosen to map to ASCII */

#? SDL_Keysym
;; each keyboard symbol is associated with a constant whose
;; symbolic name represents the key, and value represents
;; the key code (generally the ASCII code of the character).
;; Key symbols are of the form SDLK_0, SDLK_A, SDLK_b, SDLK_SPACE,
;; etc.... Look into sdl/SDL_keysym.lsh for a complete list.
(libload "libc/constants")

(defcconst "SDLK_UNKNOWN"		 0)
(defcconst "SDLK_FIRST"		 0)
(defcconst "SDLK_BACKSPACE"		 8)
(defcconst "SDLK_TAB"		 9)
(defcconst "SDLK_CLEAR"		 12)
(defcconst "SDLK_RETURN"		 13)
(defcconst "SDLK_PAUSE"		 19)
(defcconst "SDLK_ESCAPE"		 27)
(defcconst "SDLK_SPACE"		 32)
(defcconst "SDLK_EXCLAIM"		 33)
(defcconst "SDLK_QUOTEDBL"		 34)
(defcconst "SDLK_HASH"		 35)
(defcconst "SDLK_DOLLAR"		 36)
(defcconst "SDLK_AMPERSAND"		 38)
(defcconst "SDLK_QUOTE"		 39)
(defcconst "SDLK_LEFTPAREN"		 40)
(defcconst "SDLK_RIGHTPAREN"		 41)
(defcconst "SDLK_ASTERISK"		 42)
(defcconst "SDLK_PLUS"		 43)
(defcconst "SDLK_COMMA"		 44)
(defcconst "SDLK_MINUS"		 45)
(defcconst "SDLK_PERIOD"		 46)
(defcconst "SDLK_SLASH"		 47)
(defcconst "SDLK_0"			 48)
(defcconst "SDLK_1"			 49)
(defcconst "SDLK_2"			 50)
(defcconst "SDLK_3"			 51)
(defcconst "SDLK_4"			 52)
(defcconst "SDLK_5"			 53)
(defcconst "SDLK_6"			 54)
(defcconst "SDLK_7"			 55)
(defcconst "SDLK_8"			 56)
(defcconst "SDLK_9"			 57)
(defcconst "SDLK_COLON"		 58)
(defcconst "SDLK_SEMICOLON"		 59)
(defcconst "SDLK_LESS"		 60)
(defcconst "SDLK_EQUALS"		 61)
(defcconst "SDLK_GREATER"		 62)
(defcconst "SDLK_QUESTION"		 63)
(defcconst "SDLK_AT"			 64)
;; 	/* 
;; 	   Skip uppercase letters
;; 	 */
(defcconst "SDLK_LEFTBRACKET"	 91)
(defcconst "SDLK_BACKSLASH"		 92)
(defcconst "SDLK_RIGHTBRACKET"	 93)
(defcconst "SDLK_CARET"		 94)
(defcconst "SDLK_UNDERSCORE"		 95)
(defcconst "SDLK_BACKQUOTE"		 96)
(defcconst "SDLK_a"			 97)
(defcconst "SDLK_b"			 98)
(defcconst "SDLK_c"			 99)
(defcconst "SDLK_d"			 100)
(defcconst "SDLK_e"			 101)
(defcconst "SDLK_f"			 102)
(defcconst "SDLK_g"			 103)
(defcconst "SDLK_h"			 104)
(defcconst "SDLK_i"			 105)
(defcconst "SDLK_j"			 106)
(defcconst "SDLK_k"			 107)
(defcconst "SDLK_l"			 108)
(defcconst "SDLK_m"			 109)
(defcconst "SDLK_n"			 110)
(defcconst "SDLK_o"			 111)
(defcconst "SDLK_p"			 112)
(defcconst "SDLK_q"			 113)
(defcconst "SDLK_r"			 114)
(defcconst "SDLK_s"			 115)
(defcconst "SDLK_t"			 116)
(defcconst "SDLK_u"			 117)
(defcconst "SDLK_v"			 118)
(defcconst "SDLK_w"			 119)
(defcconst "SDLK_x"			 120)
(defcconst "SDLK_y"			 121)
(defcconst "SDLK_z"			 122)
(defcconst "SDLK_DELETE"		 127)
;; 	/* End of ASCII mapped keysyms */
;; 
;; 	/* International keyboard syms */
(defcconst "SDLK_WORLD_0"		 160) ;		/* 0xA0 *
(defcconst "SDLK_WORLD_1"		 161)
(defcconst "SDLK_WORLD_2"		 162)
(defcconst "SDLK_WORLD_3"		 163)
(defcconst "SDLK_WORLD_4"		 164)
(defcconst "SDLK_WORLD_5"		 165)
(defcconst "SDLK_WORLD_6"		 166)
(defcconst "SDLK_WORLD_7"		 167)
(defcconst "SDLK_WORLD_8"		 168)
(defcconst "SDLK_WORLD_9"		 169)
(defcconst "SDLK_WORLD_10"		 170)
(defcconst "SDLK_WORLD_11"		 171)
(defcconst "SDLK_WORLD_12"		 172)
(defcconst "SDLK_WORLD_13"		 173)
(defcconst "SDLK_WORLD_14"		 174)
(defcconst "SDLK_WORLD_15"		 175)
(defcconst "SDLK_WORLD_16"		 176)
(defcconst "SDLK_WORLD_17"		 177)
(defcconst "SDLK_WORLD_18"		 178)
(defcconst "SDLK_WORLD_19"		 179)
(defcconst "SDLK_WORLD_20"		 180)
(defcconst "SDLK_WORLD_21"		 181)
(defcconst "SDLK_WORLD_22"		 182)
(defcconst "SDLK_WORLD_23"		 183)
(defcconst "SDLK_WORLD_24"		 184)
(defcconst "SDLK_WORLD_25"		 185)
(defcconst "SDLK_WORLD_26"		 186)
(defcconst "SDLK_WORLD_27"		 187)
(defcconst "SDLK_WORLD_28"		 188)
(defcconst "SDLK_WORLD_29"		 189)
(defcconst "SDLK_WORLD_30"		 190)
(defcconst "SDLK_WORLD_31"		 191)
(defcconst "SDLK_WORLD_32"		 192)
(defcconst "SDLK_WORLD_33"		 193)
(defcconst "SDLK_WORLD_34"		 194)
(defcconst "SDLK_WORLD_35"		 195)
(defcconst "SDLK_WORLD_36"		 196)
(defcconst "SDLK_WORLD_37"		 197)
(defcconst "SDLK_WORLD_38"		 198)
(defcconst "SDLK_WORLD_39"		 199)
(defcconst "SDLK_WORLD_40"		 200)
(defcconst "SDLK_WORLD_41"		 201)
(defcconst "SDLK_WORLD_42"		 202)
(defcconst "SDLK_WORLD_43"		 203)
(defcconst "SDLK_WORLD_44"		 204)
(defcconst "SDLK_WORLD_45"		 205)
(defcconst "SDLK_WORLD_46"		 206)
(defcconst "SDLK_WORLD_47"		 207)
(defcconst "SDLK_WORLD_48"		 208)
(defcconst "SDLK_WORLD_49"		 209)
(defcconst "SDLK_WORLD_50"		 210)
(defcconst "SDLK_WORLD_51"		 211)
(defcconst "SDLK_WORLD_52"		 212)
(defcconst "SDLK_WORLD_53"		 213)
(defcconst "SDLK_WORLD_54"		 214)
(defcconst "SDLK_WORLD_55"		 215)
(defcconst "SDLK_WORLD_56"		 216)
(defcconst "SDLK_WORLD_57"		 217)
(defcconst "SDLK_WORLD_58"		 218)
(defcconst "SDLK_WORLD_59"		 219)
(defcconst "SDLK_WORLD_60"		 220)
(defcconst "SDLK_WORLD_61"		 221)
(defcconst "SDLK_WORLD_62"		 222)
(defcconst "SDLK_WORLD_63"		 223)
(defcconst "SDLK_WORLD_64"		 224)
(defcconst "SDLK_WORLD_65"		 225)
(defcconst "SDLK_WORLD_66"		 226)
(defcconst "SDLK_WORLD_67"		 227)
(defcconst "SDLK_WORLD_68"		 228)
(defcconst "SDLK_WORLD_69"		 229)
(defcconst "SDLK_WORLD_70"		 230)
(defcconst "SDLK_WORLD_71"		 231)
(defcconst "SDLK_WORLD_72"		 232)
(defcconst "SDLK_WORLD_73"		 233)
(defcconst "SDLK_WORLD_74"		 234)
(defcconst "SDLK_WORLD_75"		 235)
(defcconst "SDLK_WORLD_76"		 236)
(defcconst "SDLK_WORLD_77"		 237)
(defcconst "SDLK_WORLD_78"		 238)
(defcconst "SDLK_WORLD_79"		 239)
(defcconst "SDLK_WORLD_80"		 240)
(defcconst "SDLK_WORLD_81"		 241)
(defcconst "SDLK_WORLD_82"		 242)
(defcconst "SDLK_WORLD_83"		 243)
(defcconst "SDLK_WORLD_84"		 244)
(defcconst "SDLK_WORLD_85"		 245)
(defcconst "SDLK_WORLD_86"		 246)
(defcconst "SDLK_WORLD_87"		 247)
(defcconst "SDLK_WORLD_88"		 248)
(defcconst "SDLK_WORLD_89"		 249)
(defcconst "SDLK_WORLD_90"		 250)
(defcconst "SDLK_WORLD_91"		 251)
(defcconst "SDLK_WORLD_92"		 252)
(defcconst "SDLK_WORLD_93"		 253)
(defcconst "SDLK_WORLD_94"		 254)
(defcconst "SDLK_WORLD_95"		 255) ;		/* 0xFF *
;; 
;; 	/* Numeric keypad */
(defcconst "SDLK_KP0"		 256)
(defcconst "SDLK_KP1"		 257)
(defcconst "SDLK_KP2"		 258)
(defcconst "SDLK_KP3"		 259)
(defcconst "SDLK_KP4"		 260)
(defcconst "SDLK_KP5"		 261)
(defcconst "SDLK_KP6"		 262)
(defcconst "SDLK_KP7"		 263)
(defcconst "SDLK_KP8"		 264)
(defcconst "SDLK_KP9"		 265)
(defcconst "SDLK_KP_PERIOD"		 266)
(defcconst "SDLK_KP_DIVIDE"		 267)
(defcconst "SDLK_KP_MULTIPLY"	 268)
(defcconst "SDLK_KP_MINUS"		 269)
(defcconst "SDLK_KP_PLUS"		 270)
(defcconst "SDLK_KP_ENTER"		 271)
(defcconst "SDLK_KP_EQUALS"		 272)
;; 
;; 	/* Arrows + Home/End pad */
(defcconst "SDLK_UP"			 273)
(defcconst "SDLK_DOWN"		 274)
(defcconst "SDLK_RIGHT"		 275)
(defcconst "SDLK_LEFT"		 276)
(defcconst "SDLK_INSERT"		 277)
(defcconst "SDLK_HOME"		 278)
(defcconst "SDLK_END"		 279)
(defcconst "SDLK_PAGEUP"		 280)
(defcconst "SDLK_PAGEDOWN"		 281)
;; 
;; 	/* Function keys */
(defcconst "SDLK_F1"			 282)
(defcconst "SDLK_F2"			 283)
(defcconst "SDLK_F3"			 284)
(defcconst "SDLK_F4"			 285)
(defcconst "SDLK_F5"			 286)
(defcconst "SDLK_F6"			 287)
(defcconst "SDLK_F7"			 288)
(defcconst "SDLK_F8"			 289)
(defcconst "SDLK_F9"			 290)
(defcconst "SDLK_F10"		 291)
(defcconst "SDLK_F11"		 292)
(defcconst "SDLK_F12"		 293)
(defcconst "SDLK_F13"		 294)
(defcconst "SDLK_F14"		 295)
(defcconst "SDLK_F15"		 296)
;defcconst "state modifier" keys */
(defcconst "SDLK_NUMLOCK"		 300)
(defcconst "SDLK_CAPSLOCK"		 301)
(defcconst "SDLK_SCROLLOCK"		 302)
(defcconst "SDLK_RSHIFT"		 303)
(defcconst "SDLK_LSHIFT"		 304)
(defcconst "SDLK_RCTRL"		 305)
(defcconst "SDLK_LCTRL"		 306)
(defcconst "SDLK_RALT"		 307)
(defcconst "SDLK_LALT"		 308)
(defcconst "SDLK_RMETA"		 309)
(defcconst "SDLK_LMETA"		 310)
(defcconst "SDLK_LSUPER"		 311) ;		/* Left "Windows" key *
(defcconst "SDLK_RSUPER"		 312) ;		/* Right "Windows" key *
(defcconst "SDLK_MODE"		         313) ;		/* "Alt Gr" key *
(defcconst "SDLK_COMPOSE"		 314) ;		/* Multi-key compose key *
;defcconst "function keys" */
(defcconst "SDLK_HELP"		 315)
(defcconst "SDLK_PRINT"		 316)
(defcconst "SDLK_SYSREQ"		 317)
(defcconst "SDLK_BREAK"		 318)
(defcconst "SDLK_MENU"		 319)
(defcconst "SDLK_POWER"		 320) ;		/* Power Macintosh power key *
(defcconst "SDLK_EURO"		 321) ;		/* Some european keyboards *
;; 
;; 	/* Add any other keys here */
;; 
(defcconst "SDLK_LAST" 322)
;; } SDLKey;
;; 
;; /* Enumeration of valid key mods (possibly OR'd together) */
;; typedef enum {
(defcconst "KMOD_NONE"   0x0000)
(defcconst "KMOD_LSHIFT" 0x0001)
(defcconst "KMOD_RSHIFT" 0x0002)
(defcconst "KMOD_LCTRL"  0x0040)
(defcconst "KMOD_RCTRL"  0x0080)
(defcconst "KMOD_LALT"   0x0100)
(defcconst "KMOD_RALT"   0x0200)
(defcconst "KMOD_LMETA"  0x0400)
(defcconst "KMOD_RMETA"  0x0800)
(defcconst "KMOD_NUM"    0x1000)
(defcconst "KMOD_CAPS"   0x2000)
(defcconst "KMOD_MODE"   0x4000)
(defcconst "KMOD_RESERVED"  0x800)
;; } SDLMod;
;; 
(defcconst "KMOD_CTRL"	(+ @@KMOD_LCTRL @@KMOD_RCTRL))
(defcconst "KMOD_SHIFT"	(+ @@KMOD_LSHIFT @@KMOD_RSHIFT))
(defcconst " KMOD_ALT"	(+ @@KMOD_LALT @@KMOD_RALT))
(defcconst " KMOD_META"	(+ @@KMOD_LMETA @@KMOD_RMETA))
;; 
;; #endif /* _SDL_keysym_h */
