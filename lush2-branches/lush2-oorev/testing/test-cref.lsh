
(libload "testing/tools")

;; Test reference types for accessing C data

(defun address-of-var (i)
  (declare (-int-) i)
  (selectq i
    (1 (to-gptr #{ &var1 #}))
    (2 (to-gptr #{ &var2 #}))
    (3 (to-gptr #{ &var3 #}))
    (4 (to-gptr #{ &var4 #}))
    (5 (to-gptr #{ &var5 #}))
    (6 (to-gptr #{ &var6 #}))
    (7 (to-gptr #{ &var7 #})) ))

(defun test-cref-eval ()
  (printf "Testing cref evaluation...\n")
  (test-pred (= (eval (new-cref 'char  (address-of-var 1)))  ("A" 0)) 'char)
  (test-pred (= (eval (new-cref 'uchar (address-of-var 2)))  200)     'uchar)
  (test-pred (= (eval (new-cref 'short (address-of-var 3)))  3000)    'short)
  (test-pred (= (eval (new-cref 'int   (address-of-var 4)))  4e4)     'int)
  (test-pred (= (eval (new-cref 'float (address-of-var 5)))  5e5)     'float)
  (test-pred (= (eval (new-cref 'double (address-of-var 6))) 6e6)    'double)
  (test-pred (= (eval (new-cref 'str   (address-of-var 7))) "good luck") 'str)
  (printf "\n")
  ())

(defun test-cref-assign ()
  (printf "Testing cref assignment (and evaluation)...\n")
  (let ((cr (new-cref 'char (address-of-var 1))))
    (assign cr ("B" 0))
    (test-pred (= (eval cr) ("B" 0)) 'char) )

  (let ((cr (new-cref 'uchar (address-of-var 2))))
    (assign cr 201)
    (test-pred (= (eval cr) 201) 'uchar) )
    
  (let ((cr (new-cref 'short (address-of-var 3))))
    (assign cr 3001)
    (test-pred (= (eval cr) 3001) 'short) )
  
  (let ((cr (new-cref 'int (address-of-var 4))))
    (assign cr 40004)
    (test-pred (= (eval cr) 40004) 'int) )
  
  (let ((cr (new-cref 'float (address-of-var 5))))
    (assign cr 500005)
    (test-pred (= (eval cr) 500005) 'float) )
  
  (let ((cr (new-cref 'double (address-of-var 6))))
    (assign cr 6000006)
    (test-pred (= (eval cr) 6000006) 'double) )
  
  (let ((cr (new-cref 'str (address-of-var 7)))
        (s  "thank you") )
    (assign cr s)
    (test-pred (= (eval cr) s) 'str) )
  ())

(dhc-make ()
          #{ 
          char var1 = 'A';
          unsigned char var2 = 200;
          short var3 = 3000;
          int var4 = 40000;
          float var5 = 5e5;
          double var6 = 6e6;
          char *var7 = "good luck";
          #}
          address-of-var)

(test-cref-eval)
(test-cref-assign)

