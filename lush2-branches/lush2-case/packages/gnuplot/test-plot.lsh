
;; Partial translation of gnuplot/demo/finance.dem

(libload "gnuplot/plot")

(defparameter +dtd2000+ (date-to-day (string-to-date "2000-1-1" 'year 'day)))
(defparameter +spd+     (* 24 3600))

;; read data in finance.dat
(defun read-data (&optional (filename "finance.dat"))
  (let ((m (double-array 500 12))
        (n 0) )
    (do ((line (iter-lines filename)))
      (let* ((ds (str-split "\t" line))
             ((mon day yr) (str-split "/" (car ds)))
             (date (string-to-date (sprintf "%s-%s-%s" yr mon day) 'year 'day))
             (row (idx-select m 0 n))
             (d0 (* (- (date-to-day date) +dtd2000+) +spd+)) )
        (row () (cons n (cons d0 (mapcar val (cdr ds)))))
        (incr n)))
    (idx-trim! m 0 0 n)
    m))

(defun finance-demo ()
  (let* ((gp (new Gnuplot 'interactive ()))
         (m  (read-data))
         (c05 (array-take (read-data) 1 [i 0 5]))
         (g ()) )
    
    (setq g (plot-graph (title "Demo for plotting financial data")
                        (xrange 50 253)
                        (yrange 75 105)
                        "set ytics (105, 100, 95, 90, 85, 80)"
                        "set lmargin 9"
                        "set rmargin 2"
                        (lines c05) ))
    ;(==> g dump)
    (==> gp do-graph g)
    gp))
