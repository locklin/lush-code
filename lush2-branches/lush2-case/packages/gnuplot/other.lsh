
;; All the other things you want to control to make a good plot.


(in-namespace gnuplot-other-

(defmacro process-range-args ()
  `(setq from (if (= from *) "*" (sprintf "%f" from))
         to (if (= to *) "*" (sprintf "%f" to)))
  )

#? ** Other Graph Properties
;; These functions add elements to or modify aspects of a plot.

#? (title <str>)
;; Add title to the plot.
(defun title (s)
  (chk-graph)
  (==> graph add-preamble (sprintf "set title \"%s\"" s)) )

#? (xlabel <str>)
;; Add label <srt> to the x-axis.
(defun xlabel (s)
  (chk-graph)
  (==> graph add-preamble (sprintf "set xlabel \"%s\"" s)) )

#? (xrange <from> <to>)
;; Set range of x-axis. Either <from> or <to> may be <*>, which
;; indicates auto-scaling for the respective end.
(defun xrange (from to)
  (chk-graph)
  (process-range-args)
  (==> graph add-preamble (sprintf "set xrange [%s:%s]" from to)) )

#? (x2label <str>)
;; Add label <str> to the alternate (upper) x-axis.
(defun x2label (s)
  (chk-graph)
  (==> graph add-preamble (sprintf "set x2label \"%s\"" s)) )

#? (x2range <from> <to>)
;; Set range of alternate (upper) x-axis.
(defun x2range (from to)
  (chk-graph)
  (process-range-args)
  (==> graph add-preamble (sprintf "set x2range [%s:%s]" from to)) )

#? (ylabel <str>)
;; Add an axis label to the y-axis.
(defun ylabel (s)
  (chk-graph)
  (==> graph add-preamble (sprintf "set ylabel \"%s\"" s)) )

#? (yrange <from> <to>)
;; Set range of y-axis.
(defun yrange (from to)
  (chk-graph)
  (process-range-args)
  (==> graph add-preamble (sprintf "set yrange [%s:%s]" from to)) )

#? (y2label <str>)
;; Add label <str> to the alternate (right-hand) y-axis.
(defun y2label (s)
  (chk-graph)
  (==> graph add-preamble (sprintf "set y2label \"%s\"" s)) )

#? (y2range <from> <to>)
;; Set range of alternate (right-hand) y-axis.
(defun y2range (from to)
  (chk-graph)
  (process-range-args)
  (==> graph add-preamble (sprintf "set y2range [%s:%s]" from to)) )

) ; namespace gnuplot-other-



