
(defclass GnuplotGraph object
  preamble
  command
  lines
  objects)

#? (new GnuplotGraph <cmd>)
(defmethod GnuplotGraph GnuplotGraph (cmd)
  (when (not (member cmd (list "plot" "splot")))
    (error "not a valid gnuplot plot command" cmd) )
  (setq command cmd)
  (setq preamble ())
  (setq lines ())
  (setq objects ())
  () )

(defmethod GnuplotGraph add-line (text data)
  (assert (stringp text))
  (assert (numericp data))
  (setq lines (nconc1 lines (cons text data)))
  ())

(defmethod GnuplotGraph add-object (textf data)
  (assert (stringp textf))
  (assert (vectorp data))
  ;; check that textf and data are compatible
  (sprintf textf (data ()))
  (setq objects (nconc1 objects (cons textf data)))
  ())

(defmethod GnuplotGraph dump ()
  (when preamble
    (printf (str-join "\n" preamble))
    (printf "\n") )
  (when objects
    (dolist ((textf . data) objects)
      (sprintf textf (data ())) )
    (printf "\n") )
  (when lines
    (sprintf "%s %s\n" command (str-join "," (mapcar car lines)))
    (dolist (data (mapcar cdr lines))
      (pretty data)
      (printf "\n") ))
  ())


(defmacro chk-graph ()
  `(when (not (isa graph GnuplotGraph))
     (error "not in plotting scope (graph undefined)") )
  )


