;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2009 Leon Bottou, Yann Le Cun, Ralf Juengling.
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the Lesser GNU General Public License as 
;;; published by the Free Software Foundation; either version 2 of the
;;; License, or (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "iterator")

(defclass IterableDatatype object
  ((-int-) refcount) )

(defmethod IterableDatatype IterableDatatype ()
  (setq refcount 0) )

(in-namespace (class IterableDatatype)
(defmacro mutablep ()
  `(= refcount 0)
  )

(defmacro check-mutability ()
  `(when (> refcount 0)
     (error "object cannot be modified, iterators exist") )
  )
)

(defmethod IterableDatatype -destructor ()
  (when (> refcount 0)
    (printf "*** Warning: iterators for this object exist\n") )
  ())


(deftemplate DatatypeIterator iterator
  ((-obj- (IterableDatatype)) obj) )

(defmethod DatatypeIterator DatatypeIterator (o)
  (declare (-obj- (IterableDatatype)) o)
  (==> this iterator)
  (setq obj o)
  (incr :obj:refcount) )

(defmethod DatatypeIterator -destructor ()
  (decr :obj:refcount)
  ())

(dhc-make () 
          (IterableDatatype IterableDatatype 
                            -destructor)
          (DatatypeIterator DatatypeIterator
                            -destructor) )
