AC_INIT
AC_CONFIG_SRCDIR([README.tl3])
AC_CONFIG_HEADER(include/config.h)
AC_CONFIG_AUX_DIR(config)
AC_PREFIX_DEFAULT(/usr/local)
AC_CANONICAL_HOST
dnl ----------------------------------------
dnl Arguments
dnl ----------------------------------------
AC_ARG_ENABLE(debug, [  --enable-debug          compile with option -g])
AC_ARG_WITH(compiler,[  --with-compiler=<cc>    use C compiler <cc>], CC=$withval)
dnl ----------------------------------------
dnl Directories
dnl ----------------------------------------
tl3dir=tl3/tl3
AC_SUBST(tl3dir)
dnl ----------------------------------------
dnl Compiler
dnl ----------------------------------------
AC_PROG_MAKE_SET
AC_PROG_CC
CFLAGS="-O" ; 
test x${GCC-no} = xyes && CFLAGS="-O2"
test ${enable_debug-no} = yes && test $ac_cv_prog_cc_g = yes && CFLAGS="-g"
AC_SEARCH_LIBS([strerror],[cposix])
AC_USE_SYSTEM_EXTENSIONS
dnl ----------------------------------------
dnl Programs
dnl ----------------------------------------
AC_PROG_RANLIB
AC_PROG_LN_S
dnl -------------------------------------------------------
dnl @synopsis AC_PATH_XFT([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
dnl Checks for existence of library Xft.
dnl Sets variable HAVE_XFT when present.
dnl Update x_libraries and x_cflags to handle Xft.
dnl -------------------------------------------------------
AC_DEFUN([AC_PATH_XFT], [
  AC_REQUIRE([AC_PROG_PKGCONFIG])
  AC_REQUIRE([AC_PATH_FONTCONFIG])
  AC_CACHE_CHECK(for library Xft, ac_cv_cc_xft, [
    ac_cv_cc_xft=no
    if test -x "$PKGCONFIG" && $PKGCONFIG --exists xft ; then
      ac_cv_cc_xft=yes
      cflags="`$PKGCONFIG --cflags xft`"
      for cflag in $cflags ; do 
        AC_APPEND_OPTION(X_CFLAGS, $cflag)
      done
      libs="`$PKGCONFIG --libs xft` $X_LIBS"
      X_LIBS=
      for lib in $libs ; do
        case $lib in
          -L*) AC_APPEND_OPTION(X_LIBS, $lib) ;;
        esac
      done
      for lib in $libs ; do
        case $lib in
          -L*)  ;;
          *) AC_APPEND_OPTION(X_LIBS, $lib) ;;
        esac
      done
    fi
  ])
  if test x$ac_cv_cc_xft = xyes ; then
    AC_DEFINE(HAVE_XFT,1, [Define to 1 if you have the "Xft" library.])
    ifelse([$1],,:,[$1])
  else 
    ifelse([$2],,:,[$2])
  fi
])
dnl -------------------------------------------------------
dnl @synopsis AC_PROG_PKGCONFIG
dnl Checks for existence of pkg-config.
dnl Sets variable PKGCONFIG to its path
dnl -------------------------------------------------------
AC_DEFUN([AC_PROG_PKGCONFIG], [
  AC_PATH_PROG(PKGCONFIG,pkg-config)
])
dnl -------------------------------------------------------
dnl @synopsis AC_APPEND_OPTION(variable,option)
dnl Adds option into variable unless it is already there.
dnl -------------------------------------------------------
AC_DEFUN([AC_APPEND_OPTION], [
  again=no
  for n in $[$1] ; do test "[$2]" = "$n" && again=yes ; done
  test x$again = xno && [$1]="$[$1] [$2]"
])
dnl -------------------------------------------------------
dnl @synopsis AC_PATH_FONTCONFIG([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
dnl Checks for existence of library Fontconfig.
dnl Sets variable HAVE_FONTCONFIG when present.
dnl Update x_libraries and x_cflags to handle Fontconfig.
dnl -------------------------------------------------------
AC_DEFUN([AC_PATH_FONTCONFIG], [
  AC_REQUIRE([AC_PROG_PKGCONFIG])
  AC_CACHE_CHECK(for library fontconfig, ac_cv_cc_fontconfig, [
    ac_cv_cc_fontconfig=no
    if test -x "$PKGCONFIG" && $PKGCONFIG --exists fontconfig ; then
      ac_cv_cc_fontconfig=yes
      cflags="`$PKGCONFIG --cflags fontconfig`"
      for cflag in $cflags ; do 
        AC_APPEND_OPTION(X_CFLAGS, $cflag)
      done
      libs="`$PKGCONFIG --libs fontconfig` $X_LIBS"
      X_LIBS=
      for lib in $libs ; do
        case $lib in
          -L*) AC_APPEND_OPTION(X_LIBS, $lib) ;;
        esac
      done
      for lib in $libs ; do
        case $lib in
          -L*)  ;;
          *) AC_APPEND_OPTION(X_LIBS, $lib) ;;
        esac
      done
    fi
  ])
  if test x$ac_cv_cc_fontconfig = xyes ; then
    AC_DEFINE(HAVE_FONTCONFIG,1, [Define to 1 if you have the "fontconfig" library.])
    ifelse([$1],,:,[$1])
  else 
    ifelse([$2],,:,[$2])
  fi
])
dnl ----------------------------------------
dnl Libraries
dnl ----------------------------------------
AC_PATH_XTRA
AC_PATH_XFT
test "${no_x-no}" != yes && X_LIBS="$X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"
AC_SUBST(X_LIBS)
AC_CHECK_LIB(dl,dlopen)
AC_CHECK_LIB(dld,shl_load)
AC_CHECK_LIB(m,sqrt)
AC_CHECK_LIB(iconv,libiconv_open)
AC_CHECK_LIB(curses,tputs)
AC_CHECK_LIB(readline,readline)
AC_CHECK_LIB(iconv,libiconv_open)
dnl ----------------------------------------
dnl Header Files
dnl ----------------------------------------
AC_HEADER_STDC
AC_HEADER_DIRENT
AC_HEADER_TIME
AC_CHECK_HEADERS(wchar.h wctype.h langinfo.h iconv.h)
AC_CHECK_HEADERS(memory.h string.h strings.h locale.h)
AC_CHECK_HEADERS(unistd.h sys/types.h sys/time.h sys/mman.h)
AC_CHECK_HEADERS(dlfcn.h dl.h ieeefp.h fpu_control.h)
AC_CHECK_HEADERS(stropts.h sys/stropts.h sys/select.h sys/ttold.h)
AC_CHECK_HEADERS(readline/readline.h readline/history.h)
AC_SYS_LARGEFILE
dnl ----------------------------------------
dnl Functions
dnl ----------------------------------------
AC_FUNC_MMAP
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(strchr memcpy sigaction sigvec strerror getcwd)
AC_CHECK_FUNCS(ieee_handler fpsetmask __setfpucw)
AC_CHECK_FUNCS(tanh sincos dlopen sigsetjmp)
AC_CHECK_FUNCS(setenv putenv fseeko ftello)
AC_CHECK_FUNCS(setlocale nl_langinfo)
AC_FUNC_MBRTOWC
AC_MSG_CHECKING([for iconv])
ac_has_iconv=no
AC_TRY_LINK([#include "iconv.h"],
            [iconv((iconv_t)0, (char**)0, (size_t*)0, (char**)0, (size_t*)0);],
            [ac_has_iconv=yes])
AC_MSG_RESULT($ac_has_iconv)
if test x$ac_has_iconv = xyes ; then
    AC_DEFINE(HAVE_ICONV,1,
        [Define to 1 if you have the `iconv' function.])
fi
dnl ----------------------------------------
dnl Types
dnl ----------------------------------------
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_TYPE_PID_T
AC_CHECK_TYPES(long long int)
AC_CHECK_TYPES(wchar_t,,,[#include "stddef.h"])
AC_CHECK_TYPES(wint_t,,,[#include "wchar.h"])
AC_CHECK_TYPES(mbstate_t,,,[#include "wchar.h"])
dnl ----------------------------------------
dnl Process CFLAGS
dnl ----------------------------------------
AC_MSG_CHECKING(config database for compilation flags)
. $srcdir/config/cflags.sh
AC_MSG_RESULT(ok)
dnl ----------------------------------------
dnl Compilation of Shared Libraries
dnl ----------------------------------------
AC_MSG_CHECKING(config database for shlib info)
. $srcdir/config/shlib.sh
if test x${GCC-no} = xyes ; then
  cc_pic_flag=$gcc_pic_flag
  cc_exp_flag=$gcc_exp_flag
  cc_link_shlib=$gcc_link_shlib
fi
if test ${have_shlib-no} != no && test x"${command_link_shlib}" = x ; then
  command_link_shlib='${CC} ${cc_link_shlib} ${cc_exp_flag} -o'
fi
AC_SUBST(have_shlib)
AC_SUBST(cc_pic_flag)
AC_SUBST(cc_exp_flag)
AC_SUBST(cc_link_shlib)
AC_SUBST(command_link_shlib)
AC_SUBST(exe_suffix)
AC_SUBST(shlib_suffix)
AC_MSG_RESULT($have_shlib)
dnl ----------------------------------------
dnl End
dnl ----------------------------------------
test -d open || mkdir open
test -d open/examples || mkdir open/examples
AC_CONFIG_FILES([Makefile 
	  src/Makefile 
          lib/Makefile 
          help/Makefile
          open/Makefile 
	  open/unix/Makefile
	  open/examples/capnth/Makefile
	  open/examples/complex/Makefile
	  open/examples/nr/Makefile ])
AC_OUTPUT

